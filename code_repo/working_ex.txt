
poly f1 = 4*a0*a1*b0*b1-2*a0*b0*b1-2*a1*b0

case 2:

 	ss = {{},{4,-2,-2}}

 	empty set = 

 	i1 = (1+(1+a0*a1*b0*b1)(1+a0*b0*b1)(1+a1*b0))
 	   = (1+(1+a0*a1*b0*b1)(1+a1*b0+a0*b0*b1+a0*a1*b0*b1))
 	i1 = (a1*b0+a0*b0*b1+a0*a1*b0*b1))
 	i2 = (1+a0*a1*b0*b1)

 	p1 = i1*i2 = a1*b0+a0*b0*b1


 poly f2 =  1+ ((1+(1+a0*a1*b0*b1)(1+a0*b0*b1)(1+a1*b0)))

 	p2 = i1 = a1*b0+a0*b0*b1+a0*a1*b0*b1


 V(f1) = V(p1)

 V(f2) = V(p2)


 assume f1 = rem1, f2 = rem2, 

 case1rc - rectification check (f1*f2*f3*f4 = 0)

 case2rc - ( p1*p2*p3*p4 = 0) - we can use ZDD's ?

 since all pi has coefficients only (1), is case2rc 
 check more efficient than case1rc?

 if the circuit isn't rectifiable at targets, then
 we have a overhead of computing pi's unnecessarily.

