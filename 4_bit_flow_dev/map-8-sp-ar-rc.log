ABC command line: "source abc_gen_aig_cofacs.script".

Entered genlib library with 6 gates from file "cadence_abc.genlib".
Loading resource file "abc.rc".
[amulet2] AMulet Version 2.1
[amulet2] Aiger multiplier examination tool
[amulet2] Copyright(C) 2020, Daniela Kaufmann, Johannes Kepler University Linz
[amulet2] selected mode: rectification check
[amulet2] reading 'map-8-sp-ar-rc_p2_pready.aig'
[amulet2] MILOA 591 16 0 16 575
[amulet2] assuming ordering as in the ABC generated or AOKI benchmarks
[amulet2] allocating 607 gates
[amulet2] found 64 partial products
[amulet2] assuming simple pp generator
[amulet2] found 104 xor-gates
[amulet2] marking xor chain gates
[amulet2] marked 0 xor gates in last slice
[amulet2] remove internal xor gates
[amulet2] removed 169 internal xor gates
[amulet2] slicing based on input cones
[amulet2] totally merged 139 variable(s)
[amulet2] totally promoted 2 variable(s)
[amulet2] filled 16 slices
[amulet2] eliminate single occs
[amulet2] decomposed 141 variables
[amulet2] 
[amulet2] 
[amulet2] started reducing
[amulet2] reducing by slice 15
[amulet2] reducing by slice 14
[amulet2] reducing by slice 13
[amulet2] reducing by slice 12
[amulet2] reducing by slice 11
[amulet2] reducing by slice 10
[amulet2] reducing by slice 9
c
c caught signal 'SIGINT'(2)
c
c
c raising signal 'SIGINT'(2) again
# Benchmark "sp-ar-rc-8" written by ABC on Fri May 21 12:42:51 2021
.model sp-ar-rc-8
Aoki format - Input:IN1[1],Output:P[1]
Working on 8-bit multiplier.
Adding 2 bugs at random locations with bug config 1
python ../code_repo/utilities.py map-8-sp-ar-rc.blif 8 2 1 IN1[0]
Bugs added at locations new_n268_ new_n316_
Generating AIG's and remainders for each assignments to targets
