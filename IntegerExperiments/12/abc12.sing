LIB "linalg.lib";
LIB "dmodapp.lib";
LIB "my_proc.lib";

write(":w log.txt","Log file for abc12.sing");
write(":a log.txt", "");

rtimer=0;
system("--ticks-per-sec",1000);
int t0 = rtimer;

int dp = 12;

option(notWarnSB);
ring R  = 0, (
  s(23),
  s(22),
  nn2088,
  nn2086,
  nn2082,
  nn2080,
  nn2076,
  nn2074,
  s(21),
  nn2070,
  nn2068,
  nn2064,
  nn2072,
  nn2062,
  nn2058,
  nn2054,
  nn2050,
  nn2048,
  nn2044,
  nn2056,
  nn2042,
  s(20),
  nn2036,
  nn2034,
  nn2030,
  nn2038,
  nn2028,
  nn2024,
  nn2020,
  nn2016,
  nn2040,
  nn2014,
  nn2010,
  nn2006,
  nn2002,
  nn2000,
  nn1996,
  nn2022,
  nn2008,
  nn1994,
  s(19),
  nn1986,
  nn1984,
  nn1980,
  nn1988,
  nn1978,
  nn1974,
  nn1970,
  nn1966,
  nn1990,
  nn1964,
  nn1960,
  nn1956,
  nn1952,
  nn1992,
  nn1950,
  nn1946,
  nn1942,
  nn1938,
  nn1936,
  nn1932,
  nn1972,
  nn1958,
  nn1944,
  nn1930,
  s(18),
  nn1920,
  nn1918,
  nn1914,
  nn1922,
  nn1912,
  nn1908,
  nn1904,
  nn1900,
  nn1924,
  nn1898,
  nn1894,
  nn1890,
  nn1886,
  nn1926,
  nn1884,
  nn1880,
  nn1876,
  nn1872,
  nn1928,
  nn1870,
  nn1866,
  nn1862,
  nn1858,
  nn1856,
  nn1852,
  nn1906,
  nn1892,
  nn1878,
  nn1864,
  nn1850,
  s(17),
  nn1838,
  nn1836,
  nn1832,
  nn1840,
  nn1830,
  nn1826,
  nn1822,
  nn1818,
  nn1842,
  nn1816,
  nn1812,
  nn1808,
  nn1804,
  nn1844,
  nn1802,
  nn1798,
  nn1794,
  nn1790,
  nn1846,
  nn1788,
  nn1784,
  nn1780,
  nn1776,
  nn1848,
  nn1774,
  nn1770,
  nn1766,
  nn1762,
  nn1760,
  nn1756,
  nn1824,
  nn1810,
  nn1796,
  nn1782,
  nn1768,
  nn1754,
  s(16),
  nn1740,
  nn1738,
  nn1734,
  nn1742,
  nn1732,
  nn1728,
  nn1724,
  nn1720,
  nn1744,
  nn1718,
  nn1714,
  nn1710,
  nn1706,
  nn1746,
  nn1704,
  nn1700,
  nn1696,
  nn1692,
  nn1748,
  nn1690,
  nn1686,
  nn1682,
  nn1678,
  nn1750,
  nn1676,
  nn1672,
  nn1668,
  nn1664,
  nn1752,
  nn1662,
  nn1658,
  nn1654,
  nn1650,
  nn1648,
  nn1644,
  nn1726,
  nn1712,
  nn1698,
  nn1684,
  nn1670,
  nn1656,
  nn1642,
  s(15),
  nn1626,
  nn1624,
  nn1620,
  nn1628,
  nn1618,
  nn1614,
  nn1610,
  nn1606,
  nn1630,
  nn1604,
  nn1600,
  nn1596,
  nn1592,
  nn1632,
  nn1590,
  nn1586,
  nn1582,
  nn1578,
  nn1634,
  nn1576,
  nn1572,
  nn1568,
  nn1564,
  nn1636,
  nn1562,
  nn1558,
  nn1554,
  nn1550,
  nn1638,
  nn1548,
  nn1544,
  nn1540,
  nn1536,
  nn1640,
  nn1534,
  nn1530,
  nn1526,
  nn1522,
  nn1520,
  nn1516,
  nn1612,
  nn1598,
  nn1584,
  nn1570,
  nn1556,
  nn1542,
  nn1528,
  nn1514,
  s(14),
  nn1496,
  nn1494,
  nn1490,
  nn1498,
  nn1488,
  nn1484,
  nn1480,
  nn1476,
  nn1500,
  nn1474,
  nn1470,
  nn1466,
  nn1462,
  nn1502,
  nn1460,
  nn1456,
  nn1452,
  nn1448,
  nn1504,
  nn1446,
  nn1442,
  nn1438,
  nn1434,
  nn1506,
  nn1432,
  nn1428,
  nn1424,
  nn1420,
  nn1508,
  nn1418,
  nn1414,
  nn1410,
  nn1406,
  nn1510,
  nn1404,
  nn1400,
  nn1396,
  nn1392,
  nn1512,
  nn1390,
  nn1386,
  nn1382,
  nn1378,
  nn1376,
  nn1372,
  nn1482,
  nn1468,
  nn1454,
  nn1440,
  nn1426,
  nn1412,
  nn1398,
  nn1384,
  nn1370,
  s(13),
  nn1350,
  nn1348,
  nn1344,
  nn1352,
  nn1342,
  nn1338,
  nn1334,
  nn1330,
  nn1354,
  nn1328,
  nn1324,
  nn1320,
  nn1316,
  nn1356,
  nn1314,
  nn1310,
  nn1306,
  nn1302,
  nn1358,
  nn1300,
  nn1296,
  nn1292,
  nn1288,
  nn1360,
  nn1286,
  nn1282,
  nn1278,
  nn1274,
  nn1362,
  nn1272,
  nn1268,
  nn1264,
  nn1260,
  nn1364,
  nn1258,
  nn1254,
  nn1250,
  nn1246,
  nn1366,
  nn1244,
  nn1240,
  nn1236,
  nn1232,
  nn1368,
  nn1230,
  nn1226,
  nn1222,
  nn1218,
  nn1216,
  nn1212,
  nn1336,
  nn1322,
  nn1308,
  nn1294,
  nn1280,
  nn1266,
  nn1252,
  nn1238,
  nn1224,
  nn1210,
  s(12),
  nn1190,
  nn1188,
  nn1184,
  nn1192,
  nn1182,
  nn1178,
  nn1174,
  nn1170,
  nn1194,
  nn1168,
  nn1164,
  nn1160,
  nn1156,
  nn1196,
  nn1154,
  nn1150,
  nn1146,
  nn1142,
  nn1198,
  nn1140,
  nn1136,
  nn1132,
  nn1128,
  nn1200,
  nn1126,
  nn1122,
  nn1118,
  nn1114,
  nn1202,
  nn1112,
  nn1108,
  nn1104,
  nn1100,
  nn1204,
  nn1098,
  nn1094,
  nn1090,
  nn1086,
  nn1206,
  nn1084,
  nn1080,
  nn1076,
  nn1072,
  nn1208,
  nn1070,
  nn1066,
  nn1062,
  nn1058,
  nn1056,
  nn1052,
  nn1048,
  nn1044,
  nn1176,
  nn1162,
  nn1148,
  nn1134,
  nn1120,
  nn1106,
  nn1092,
  nn1078,
  nn1064,
  nn1050,
  nn1042,
  s(11),
  nn1022,
  nn1020,
  nn1016,
  nn1012,
  nn1008,
  nn1024,
  nn1006,
  nn1002,
  nn998,
  nn994,
  nn1026,
  nn992,
  nn988,
  nn984,
  nn980,
  nn1028,
  nn978,
  nn974,
  nn970,
  nn966,
  nn1030,
  nn964,
  nn960,
  nn956,
  nn952,
  nn1032,
  nn950,
  nn946,
  nn942,
  nn938,
  nn1034,
  nn936,
  nn932,
  nn928,
  nn924,
  nn1036,
  nn922,
  nn918,
  nn914,
  nn910,
  nn1038,
  nn908,
  nn904,
  nn900,
  nn896,
  nn1040,
  nn894,
  nn890,
  nn886,
  nn882,
  nn880,
  nn876,
  nn1014,
  nn1000,
  nn986,
  nn972,
  nn958,
  nn944,
  nn930,
  nn916,
  nn902,
  nn888,
  nn874,
  nn872,
  s(10),
  nn854,
  nn852,
  nn848,
  nn844,
  nn840,
  nn856,
  nn838,
  nn834,
  nn830,
  nn826,
  nn858,
  nn824,
  nn820,
  nn816,
  nn812,
  nn860,
  nn810,
  nn806,
  nn802,
  nn798,
  nn862,
  nn796,
  nn792,
  nn788,
  nn784,
  nn864,
  nn782,
  nn778,
  nn774,
  nn770,
  nn866,
  nn768,
  nn764,
  nn760,
  nn756,
  nn868,
  nn754,
  nn750,
  nn746,
  nn742,
  nn870,
  nn740,
  nn736,
  nn732,
  nn728,
  nn726,
  nn722,
  nn846,
  nn832,
  nn818,
  nn804,
  nn790,
  nn776,
  nn762,
  nn748,
  nn734,
  nn720,
  nn718,
  s(9),
  nn702,
  nn700,
  nn696,
  nn692,
  nn688,
  nn704,
  nn686,
  nn682,
  nn678,
  nn674,
  nn706,
  nn672,
  nn668,
  nn664,
  nn660,
  nn708,
  nn658,
  nn654,
  nn650,
  nn646,
  nn710,
  nn644,
  nn640,
  nn636,
  nn632,
  nn712,
  nn630,
  nn626,
  nn622,
  nn618,
  nn714,
  nn616,
  nn612,
  nn608,
  nn604,
  nn716,
  nn602,
  nn598,
  nn594,
  nn590,
  nn588,
  nn584,
  nn694,
  nn680,
  nn666,
  nn652,
  nn638,
  nn624,
  nn610,
  nn596,
  nn582,
  nn580,
  s(8),
  nn566,
  nn564,
  nn560,
  nn556,
  nn552,
  nn568,
  nn550,
  nn546,
  nn542,
  nn538,
  nn570,
  nn536,
  nn532,
  nn528,
  nn524,
  nn572,
  nn522,
  nn518,
  nn514,
  nn510,
  nn574,
  nn508,
  nn504,
  nn500,
  nn496,
  nn576,
  nn494,
  nn490,
  nn486,
  nn482,
  nn578,
  nn480,
  nn476,
  nn472,
  nn468,
  nn466,
  nn462,
  nn558,
  nn544,
  nn530,
  nn516,
  nn502,
  nn488,
  nn474,
  nn460,
  nn458,
  s(7),
  nn446,
  nn444,
  nn440,
  nn436,
  nn432,
  nn448,
  nn430,
  nn426,
  nn422,
  nn418,
  nn450,
  nn416,
  nn412,
  nn408,
  nn404,
  nn452,
  nn402,
  nn398,
  nn394,
  nn390,
  nn454,
  nn388,
  nn384,
  nn380,
  nn376,
  nn456,
  nn374,
  nn370,
  nn366,
  nn362,
  nn360,
  nn356,
  nn438,
  nn424,
  nn410,
  nn396,
  nn382,
  nn368,
  nn354,
  nn352,
  s(6),
  nn342,
  nn340,
  nn336,
  nn332,
  nn328,
  nn344,
  nn326,
  nn322,
  nn318,
  nn314,
  nn346,
  nn312,
  nn308,
  nn304,
  nn300,
  nn348,
  nn298,
  nn294,
  nn290,
  nn286,
  nn350,
  nn284,
  nn280,
  nn276,
  nn272,
  nn270,
  nn266,
  nn334,
  nn320,
  nn306,
  nn292,
  nn278,
  nn264,
  nn262,
  s(5),
  nn254,
  nn252,
  nn248,
  nn244,
  nn240,
  nn256,
  nn238,
  nn234,
  nn230,
  nn226,
  nn258,
  nn224,
  nn220,
  nn216,
  nn212,
  nn260,
  nn210,
  nn206,
  nn202,
  nn198,
  nn196,
  nn192,
  nn246,
  nn232,
  nn218,
  nn204,
  nn190,
  nn188,
  s(4),
  nn182,
  nn180,
  nn176,
  nn172,
  nn168,
  nn184,
  nn166,
  nn162,
  nn158,
  nn154,
  nn186,
  nn152,
  nn148,
  nn144,
  nn140,
  nn138,
  nn134,
  nn174,
  nn160,
  nn146,
  nn132,
  nn130,
  s(3),
  nn126,
  nn124,
  nn120,
  nn116,
  nn112,
  nn128,
  nn110,
  nn106,
  nn102,
  nn98,
  nn96,
  nn92,
  nn118,
  nn104,
  nn90,
  nn88,
  s(2),
  nn86,
  nn84,
  nn80,
  nn76,
  nn72,
  nn70,
  nn66,
  nn78,
  nn64,
  nn62,
  s(1),
  nn60,
  nn56,
  nn54,
  nn52,
  s(0),
  nn50,
  b(11),
  b(10),
  b(9),
  b(8),
  b(7),
  b(6),
  b(5),
  b(4),
  b(3),
  b(2),
  b(1),
  b(0),
  a(11),
  a(10),
  a(9),
  a(8),
  a(7),
  a(6),
  a(5),
  a(4),
  a(3),
  a(2),
  a(1),
  a(0)
), lp;
poly PP(23) =0; 
poly PP(22) = a(11)*b(11); 
poly PP(21) = a(10)*b(11)+ a(11)*b(10); 
poly PP(20) = a(9)*b(11)+ a(10)*b(10)+ a(11)*b(9); 
poly PP(19) = a(8)*b(11)+ a(9)*b(10)+ a(10)*b(9)+ a(11)*b(8); 
poly PP(18) = a(7)*b(11)+ a(8)*b(10)+ a(9)*b(9)+ a(10)*b(8)+ a(11)*b(7); 
poly PP(17) = a(6)*b(11)+ a(7)*b(10)+ a(8)*b(9)+ a(9)*b(8)+ a(10)*b(7)+ a(11)*b(6); 
poly PP(16) = a(5)*b(11)+ a(6)*b(10)+ a(7)*b(9)+ a(8)*b(8)+ a(9)*b(7)+ a(10)*b(6)+ a(11)*b(5); 
poly PP(15) = a(4)*b(11)+ a(5)*b(10)+ a(6)*b(9)+ a(7)*b(8)+ a(8)*b(7)+ a(9)*b(6)+ a(10)*b(5)+ a(11)*b(4); 
poly PP(14) = a(3)*b(11)+ a(4)*b(10)+ a(5)*b(9)+ a(6)*b(8)+ a(7)*b(7)+ a(8)*b(6)+ a(9)*b(5)+ a(10)*b(4)+ a(11)*b(3); 
poly PP(13) = a(2)*b(11)+ a(3)*b(10)+ a(4)*b(9)+ a(5)*b(8)+ a(6)*b(7)+ a(7)*b(6)+ a(8)*b(5)+ a(9)*b(4)+ a(10)*b(3)+ a(11)*b(2); 
poly PP(12) = a(1)*b(11)+ a(2)*b(10)+ a(3)*b(9)+ a(4)*b(8)+ a(5)*b(7)+ a(6)*b(6)+ a(7)*b(5)+ a(8)*b(4)+ a(9)*b(3)+ a(10)*b(2)+ a(11)*b(1); 
poly PP(11) = a(0)*b(11)+ a(1)*b(10)+ a(2)*b(9)+ a(3)*b(8)+ a(4)*b(7)+ a(5)*b(6)+ a(6)*b(5)+ a(7)*b(4)+ a(8)*b(3)+ a(9)*b(2)+ a(10)*b(1)+ a(11)*b(0); 
poly PP(10) = a(0)*b(10)+ a(1)*b(9)+ a(2)*b(8)+ a(3)*b(7)+ a(4)*b(6)+ a(5)*b(5)+ a(6)*b(4)+ a(7)*b(3)+ a(8)*b(2)+ a(9)*b(1)+ a(10)*b(0); 
poly PP(9) = a(0)*b(9)+ a(1)*b(8)+ a(2)*b(7)+ a(3)*b(6)+ a(4)*b(5)+ a(5)*b(4)+ a(6)*b(3)+ a(7)*b(2)+ a(8)*b(1)+ a(9)*b(0); 
poly PP(8) = a(0)*b(8)+ a(1)*b(7)+ a(2)*b(6)+ a(3)*b(5)+ a(4)*b(4)+ a(5)*b(3)+ a(6)*b(2)+ a(7)*b(1)+ a(8)*b(0); 
poly PP(7) = a(0)*b(7)+ a(1)*b(6)+ a(2)*b(5)+ a(3)*b(4)+ a(4)*b(3)+ a(5)*b(2)+ a(6)*b(1)+ a(7)*b(0); 
poly PP(6) = a(0)*b(6)+ a(1)*b(5)+ a(2)*b(4)+ a(3)*b(3)+ a(4)*b(2)+ a(5)*b(1)+ a(6)*b(0); 
poly PP(5) = a(0)*b(5)+ a(1)*b(4)+ a(2)*b(3)+ a(3)*b(2)+ a(4)*b(1)+ a(5)*b(0); 
poly PP(4) = a(0)*b(4)+ a(1)*b(3)+ a(2)*b(2)+ a(3)*b(1)+ a(4)*b(0); 
poly PP(3) = a(0)*b(3)+ a(1)*b(2)+ a(2)*b(1)+ a(3)*b(0); 
poly PP(2) = a(0)*b(2)+ a(1)*b(1)+ a(2)*b(0); 
poly PP(1) = a(0)*b(1)+ a(1)*b(0); 
poly PP(0) = a(0)*b(0); 
poly Car(24) = 0; 
ideal FS0 =
  -nn50 + nn50^2
;
ideal FS1 =
  -nn52 + nn52^2,
  -nn54 + nn54^2,
  -nn56 + nn56^2,
  -nn60 + nn60^2
;
ideal FS2 =
  -nn62 + nn62^2,
  -nn64 + nn64^2,
  -nn78 + nn78^2,
  -nn66 + nn66^2,
  -nn70 + nn70^2,
  -nn72 + nn72^2,
  -nn76 + nn76^2,
  -nn80 + nn80^2,
  -nn84 + nn84^2,
  -nn86 + nn86^2
;
ideal FS3 =
  -nn88 + nn88^2,
  -nn90 + nn90^2,
  -nn104 + nn104^2,
  -nn118 + nn118^2,
  -nn92 + nn92^2,
  -nn96 + nn96^2,
  -nn98 + nn98^2,
  -nn102 + nn102^2,
  -nn106 + nn106^2,
  -nn110 + nn110^2,
  -nn128 + nn128^2,
  -nn112 + nn112^2,
  -nn116 + nn116^2,
  -nn120 + nn120^2,
  -nn124 + nn124^2,
  -nn126 + nn126^2
;
ideal FS4 =
  -nn130 + nn130^2,
  -nn132 + nn132^2,
  -nn146 + nn146^2,
  -nn160 + nn160^2,
  -nn174 + nn174^2,
  -nn134 + nn134^2,
  -nn138 + nn138^2,
  -nn140 + nn140^2,
  -nn144 + nn144^2,
  -nn148 + nn148^2,
  -nn152 + nn152^2,
  -nn186 + nn186^2,
  -nn154 + nn154^2,
  -nn158 + nn158^2,
  -nn162 + nn162^2,
  -nn166 + nn166^2,
  -nn184 + nn184^2,
  -nn168 + nn168^2,
  -nn172 + nn172^2,
  -nn176 + nn176^2,
  -nn180 + nn180^2,
  -nn182 + nn182^2
;
ideal FS5 =
  -nn188 + nn188^2,
  -nn190 + nn190^2,
  -nn204 + nn204^2,
  -nn218 + nn218^2,
  -nn232 + nn232^2,
  -nn246 + nn246^2,
  -nn192 + nn192^2,
  -nn196 + nn196^2,
  -nn198 + nn198^2,
  -nn202 + nn202^2,
  -nn206 + nn206^2,
  -nn210 + nn210^2,
  -nn260 + nn260^2,
  -nn212 + nn212^2,
  -nn216 + nn216^2,
  -nn220 + nn220^2,
  -nn224 + nn224^2,
  -nn258 + nn258^2,
  -nn226 + nn226^2,
  -nn230 + nn230^2,
  -nn234 + nn234^2,
  -nn238 + nn238^2,
  -nn256 + nn256^2,
  -nn240 + nn240^2,
  -nn244 + nn244^2,
  -nn248 + nn248^2,
  -nn252 + nn252^2,
  -nn254 + nn254^2
;
ideal FS6 =
  -nn262 + nn262^2,
  -nn264 + nn264^2,
  -nn278 + nn278^2,
  -nn292 + nn292^2,
  -nn306 + nn306^2,
  -nn320 + nn320^2,
  -nn334 + nn334^2,
  -nn266 + nn266^2,
  -nn270 + nn270^2,
  -nn272 + nn272^2,
  -nn276 + nn276^2,
  -nn280 + nn280^2,
  -nn284 + nn284^2,
  -nn350 + nn350^2,
  -nn286 + nn286^2,
  -nn290 + nn290^2,
  -nn294 + nn294^2,
  -nn298 + nn298^2,
  -nn348 + nn348^2,
  -nn300 + nn300^2,
  -nn304 + nn304^2,
  -nn308 + nn308^2,
  -nn312 + nn312^2,
  -nn346 + nn346^2,
  -nn314 + nn314^2,
  -nn318 + nn318^2,
  -nn322 + nn322^2,
  -nn326 + nn326^2,
  -nn344 + nn344^2,
  -nn328 + nn328^2,
  -nn332 + nn332^2,
  -nn336 + nn336^2,
  -nn340 + nn340^2,
  -nn342 + nn342^2
;
ideal FS7 =
  -nn352 + nn352^2,
  -nn354 + nn354^2,
  -nn368 + nn368^2,
  -nn382 + nn382^2,
  -nn396 + nn396^2,
  -nn410 + nn410^2,
  -nn424 + nn424^2,
  -nn438 + nn438^2,
  -nn356 + nn356^2,
  -nn360 + nn360^2,
  -nn362 + nn362^2,
  -nn366 + nn366^2,
  -nn370 + nn370^2,
  -nn374 + nn374^2,
  -nn456 + nn456^2,
  -nn376 + nn376^2,
  -nn380 + nn380^2,
  -nn384 + nn384^2,
  -nn388 + nn388^2,
  -nn454 + nn454^2,
  -nn390 + nn390^2,
  -nn394 + nn394^2,
  -nn398 + nn398^2,
  -nn402 + nn402^2,
  -nn452 + nn452^2,
  -nn404 + nn404^2,
  -nn408 + nn408^2,
  -nn412 + nn412^2,
  -nn416 + nn416^2,
  -nn450 + nn450^2,
  -nn418 + nn418^2,
  -nn422 + nn422^2,
  -nn426 + nn426^2,
  -nn430 + nn430^2,
  -nn448 + nn448^2,
  -nn432 + nn432^2,
  -nn436 + nn436^2,
  -nn440 + nn440^2,
  -nn444 + nn444^2,
  -nn446 + nn446^2
;
ideal FS8 =
  -nn458 + nn458^2,
  -nn460 + nn460^2,
  -nn474 + nn474^2,
  -nn488 + nn488^2,
  -nn502 + nn502^2,
  -nn516 + nn516^2,
  -nn530 + nn530^2,
  -nn544 + nn544^2,
  -nn558 + nn558^2,
  -nn462 + nn462^2,
  -nn466 + nn466^2,
  -nn468 + nn468^2,
  -nn472 + nn472^2,
  -nn476 + nn476^2,
  -nn480 + nn480^2,
  -nn578 + nn578^2,
  -nn482 + nn482^2,
  -nn486 + nn486^2,
  -nn490 + nn490^2,
  -nn494 + nn494^2,
  -nn576 + nn576^2,
  -nn496 + nn496^2,
  -nn500 + nn500^2,
  -nn504 + nn504^2,
  -nn508 + nn508^2,
  -nn574 + nn574^2,
  -nn510 + nn510^2,
  -nn514 + nn514^2,
  -nn518 + nn518^2,
  -nn522 + nn522^2,
  -nn572 + nn572^2,
  -nn524 + nn524^2,
  -nn528 + nn528^2,
  -nn532 + nn532^2,
  -nn536 + nn536^2,
  -nn570 + nn570^2,
  -nn538 + nn538^2,
  -nn542 + nn542^2,
  -nn546 + nn546^2,
  -nn550 + nn550^2,
  -nn568 + nn568^2,
  -nn552 + nn552^2,
  -nn556 + nn556^2,
  -nn560 + nn560^2,
  -nn564 + nn564^2,
  -nn566 + nn566^2
;
ideal FS9 =
  -nn580 + nn580^2,
  -nn582 + nn582^2,
  -nn596 + nn596^2,
  -nn610 + nn610^2,
  -nn624 + nn624^2,
  -nn638 + nn638^2,
  -nn652 + nn652^2,
  -nn666 + nn666^2,
  -nn680 + nn680^2,
  -nn694 + nn694^2,
  -nn584 + nn584^2,
  -nn588 + nn588^2,
  -nn590 + nn590^2,
  -nn594 + nn594^2,
  -nn598 + nn598^2,
  -nn602 + nn602^2,
  -nn716 + nn716^2,
  -nn604 + nn604^2,
  -nn608 + nn608^2,
  -nn612 + nn612^2,
  -nn616 + nn616^2,
  -nn714 + nn714^2,
  -nn618 + nn618^2,
  -nn622 + nn622^2,
  -nn626 + nn626^2,
  -nn630 + nn630^2,
  -nn712 + nn712^2,
  -nn632 + nn632^2,
  -nn636 + nn636^2,
  -nn640 + nn640^2,
  -nn644 + nn644^2,
  -nn710 + nn710^2,
  -nn646 + nn646^2,
  -nn650 + nn650^2,
  -nn654 + nn654^2,
  -nn658 + nn658^2,
  -nn708 + nn708^2,
  -nn660 + nn660^2,
  -nn664 + nn664^2,
  -nn668 + nn668^2,
  -nn672 + nn672^2,
  -nn706 + nn706^2,
  -nn674 + nn674^2,
  -nn678 + nn678^2,
  -nn682 + nn682^2,
  -nn686 + nn686^2,
  -nn704 + nn704^2,
  -nn688 + nn688^2,
  -nn692 + nn692^2,
  -nn696 + nn696^2,
  -nn700 + nn700^2,
  -nn702 + nn702^2
;
ideal FS10 =
  -nn718 + nn718^2,
  -nn720 + nn720^2,
  -nn734 + nn734^2,
  -nn748 + nn748^2,
  -nn762 + nn762^2,
  -nn776 + nn776^2,
  -nn790 + nn790^2,
  -nn804 + nn804^2,
  -nn818 + nn818^2,
  -nn832 + nn832^2,
  -nn846 + nn846^2,
  -nn722 + nn722^2,
  -nn726 + nn726^2,
  -nn728 + nn728^2,
  -nn732 + nn732^2,
  -nn736 + nn736^2,
  -nn740 + nn740^2,
  -nn870 + nn870^2,
  -nn742 + nn742^2,
  -nn746 + nn746^2,
  -nn750 + nn750^2,
  -nn754 + nn754^2,
  -nn868 + nn868^2,
  -nn756 + nn756^2,
  -nn760 + nn760^2,
  -nn764 + nn764^2,
  -nn768 + nn768^2,
  -nn866 + nn866^2,
  -nn770 + nn770^2,
  -nn774 + nn774^2,
  -nn778 + nn778^2,
  -nn782 + nn782^2,
  -nn864 + nn864^2,
  -nn784 + nn784^2,
  -nn788 + nn788^2,
  -nn792 + nn792^2,
  -nn796 + nn796^2,
  -nn862 + nn862^2,
  -nn798 + nn798^2,
  -nn802 + nn802^2,
  -nn806 + nn806^2,
  -nn810 + nn810^2,
  -nn860 + nn860^2,
  -nn812 + nn812^2,
  -nn816 + nn816^2,
  -nn820 + nn820^2,
  -nn824 + nn824^2,
  -nn858 + nn858^2,
  -nn826 + nn826^2,
  -nn830 + nn830^2,
  -nn834 + nn834^2,
  -nn838 + nn838^2,
  -nn856 + nn856^2,
  -nn840 + nn840^2,
  -nn844 + nn844^2,
  -nn848 + nn848^2,
  -nn852 + nn852^2,
  -nn854 + nn854^2
;
ideal FS11 =
  -nn872 + nn872^2,
  -nn874 + nn874^2,
  -nn888 + nn888^2,
  -nn902 + nn902^2,
  -nn916 + nn916^2,
  -nn930 + nn930^2,
  -nn944 + nn944^2,
  -nn958 + nn958^2,
  -nn972 + nn972^2,
  -nn986 + nn986^2,
  -nn1000 + nn1000^2,
  -nn1014 + nn1014^2,
  -nn876 + nn876^2,
  -nn880 + nn880^2,
  -nn882 + nn882^2,
  -nn886 + nn886^2,
  -nn890 + nn890^2,
  -nn894 + nn894^2,
  -nn1040 + nn1040^2,
  -nn896 + nn896^2,
  -nn900 + nn900^2,
  -nn904 + nn904^2,
  -nn908 + nn908^2,
  -nn1038 + nn1038^2,
  -nn910 + nn910^2,
  -nn914 + nn914^2,
  -nn918 + nn918^2,
  -nn922 + nn922^2,
  -nn1036 + nn1036^2,
  -nn924 + nn924^2,
  -nn928 + nn928^2,
  -nn932 + nn932^2,
  -nn936 + nn936^2,
  -nn1034 + nn1034^2,
  -nn938 + nn938^2,
  -nn942 + nn942^2,
  -nn946 + nn946^2,
  -nn950 + nn950^2,
  -nn1032 + nn1032^2,
  -nn952 + nn952^2,
  -nn956 + nn956^2,
  -nn960 + nn960^2,
  -nn964 + nn964^2,
  -nn1030 + nn1030^2,
  -nn966 + nn966^2,
  -nn970 + nn970^2,
  -nn974 + nn974^2,
  -nn978 + nn978^2,
  -nn1028 + nn1028^2,
  -nn980 + nn980^2,
  -nn984 + nn984^2,
  -nn988 + nn988^2,
  -nn992 + nn992^2,
  -nn1026 + nn1026^2,
  -nn994 + nn994^2,
  -nn998 + nn998^2,
  -nn1002 + nn1002^2,
  -nn1006 + nn1006^2,
  -nn1024 + nn1024^2,
  -nn1008 + nn1008^2,
  -nn1012 + nn1012^2,
  -nn1016 + nn1016^2,
  -nn1020 + nn1020^2,
  -nn1022 + nn1022^2
;
ideal FS12 =
  -nn1042 + nn1042^2,
  -nn1050 + nn1050^2,
  -nn1064 + nn1064^2,
  -nn1078 + nn1078^2,
  -nn1092 + nn1092^2,
  -nn1106 + nn1106^2,
  -nn1120 + nn1120^2,
  -nn1134 + nn1134^2,
  -nn1148 + nn1148^2,
  -nn1162 + nn1162^2,
  -nn1176 + nn1176^2,
  -nn1044 + nn1044^2,
  -nn1048 + nn1048^2,
  -nn1052 + nn1052^2,
  -nn1056 + nn1056^2,
  -nn1058 + nn1058^2,
  -nn1062 + nn1062^2,
  -nn1066 + nn1066^2,
  -nn1070 + nn1070^2,
  -nn1208 + nn1208^2,
  -nn1072 + nn1072^2,
  -nn1076 + nn1076^2,
  -nn1080 + nn1080^2,
  -nn1084 + nn1084^2,
  -nn1206 + nn1206^2,
  -nn1086 + nn1086^2,
  -nn1090 + nn1090^2,
  -nn1094 + nn1094^2,
  -nn1098 + nn1098^2,
  -nn1204 + nn1204^2,
  -nn1100 + nn1100^2,
  -nn1104 + nn1104^2,
  -nn1108 + nn1108^2,
  -nn1112 + nn1112^2,
  -nn1202 + nn1202^2,
  -nn1114 + nn1114^2,
  -nn1118 + nn1118^2,
  -nn1122 + nn1122^2,
  -nn1126 + nn1126^2,
  -nn1200 + nn1200^2,
  -nn1128 + nn1128^2,
  -nn1132 + nn1132^2,
  -nn1136 + nn1136^2,
  -nn1140 + nn1140^2,
  -nn1198 + nn1198^2,
  -nn1142 + nn1142^2,
  -nn1146 + nn1146^2,
  -nn1150 + nn1150^2,
  -nn1154 + nn1154^2,
  -nn1196 + nn1196^2,
  -nn1156 + nn1156^2,
  -nn1160 + nn1160^2,
  -nn1164 + nn1164^2,
  -nn1168 + nn1168^2,
  -nn1194 + nn1194^2,
  -nn1170 + nn1170^2,
  -nn1174 + nn1174^2,
  -nn1178 + nn1178^2,
  -nn1182 + nn1182^2,
  -nn1192 + nn1192^2,
  -nn1184 + nn1184^2,
  -nn1188 + nn1188^2,
  -nn1190 + nn1190^2
;
ideal FS13 =
  -nn1210 + nn1210^2,
  -nn1224 + nn1224^2,
  -nn1238 + nn1238^2,
  -nn1252 + nn1252^2,
  -nn1266 + nn1266^2,
  -nn1280 + nn1280^2,
  -nn1294 + nn1294^2,
  -nn1308 + nn1308^2,
  -nn1322 + nn1322^2,
  -nn1336 + nn1336^2,
  -nn1212 + nn1212^2,
  -nn1216 + nn1216^2,
  -nn1218 + nn1218^2,
  -nn1222 + nn1222^2,
  -nn1226 + nn1226^2,
  -nn1230 + nn1230^2,
  -nn1368 + nn1368^2,
  -nn1232 + nn1232^2,
  -nn1236 + nn1236^2,
  -nn1240 + nn1240^2,
  -nn1244 + nn1244^2,
  -nn1366 + nn1366^2,
  -nn1246 + nn1246^2,
  -nn1250 + nn1250^2,
  -nn1254 + nn1254^2,
  -nn1258 + nn1258^2,
  -nn1364 + nn1364^2,
  -nn1260 + nn1260^2,
  -nn1264 + nn1264^2,
  -nn1268 + nn1268^2,
  -nn1272 + nn1272^2,
  -nn1362 + nn1362^2,
  -nn1274 + nn1274^2,
  -nn1278 + nn1278^2,
  -nn1282 + nn1282^2,
  -nn1286 + nn1286^2,
  -nn1360 + nn1360^2,
  -nn1288 + nn1288^2,
  -nn1292 + nn1292^2,
  -nn1296 + nn1296^2,
  -nn1300 + nn1300^2,
  -nn1358 + nn1358^2,
  -nn1302 + nn1302^2,
  -nn1306 + nn1306^2,
  -nn1310 + nn1310^2,
  -nn1314 + nn1314^2,
  -nn1356 + nn1356^2,
  -nn1316 + nn1316^2,
  -nn1320 + nn1320^2,
  -nn1324 + nn1324^2,
  -nn1328 + nn1328^2,
  -nn1354 + nn1354^2,
  -nn1330 + nn1330^2,
  -nn1334 + nn1334^2,
  -nn1338 + nn1338^2,
  -nn1342 + nn1342^2,
  -nn1352 + nn1352^2,
  -nn1344 + nn1344^2,
  -nn1348 + nn1348^2,
  -nn1350 + nn1350^2
;
ideal FS14 =
  -nn1370 + nn1370^2,
  -nn1384 + nn1384^2,
  -nn1398 + nn1398^2,
  -nn1412 + nn1412^2,
  -nn1426 + nn1426^2,
  -nn1440 + nn1440^2,
  -nn1454 + nn1454^2,
  -nn1468 + nn1468^2,
  -nn1482 + nn1482^2,
  -nn1372 + nn1372^2,
  -nn1376 + nn1376^2,
  -nn1378 + nn1378^2,
  -nn1382 + nn1382^2,
  -nn1386 + nn1386^2,
  -nn1390 + nn1390^2,
  -nn1512 + nn1512^2,
  -nn1392 + nn1392^2,
  -nn1396 + nn1396^2,
  -nn1400 + nn1400^2,
  -nn1404 + nn1404^2,
  -nn1510 + nn1510^2,
  -nn1406 + nn1406^2,
  -nn1410 + nn1410^2,
  -nn1414 + nn1414^2,
  -nn1418 + nn1418^2,
  -nn1508 + nn1508^2,
  -nn1420 + nn1420^2,
  -nn1424 + nn1424^2,
  -nn1428 + nn1428^2,
  -nn1432 + nn1432^2,
  -nn1506 + nn1506^2,
  -nn1434 + nn1434^2,
  -nn1438 + nn1438^2,
  -nn1442 + nn1442^2,
  -nn1446 + nn1446^2,
  -nn1504 + nn1504^2,
  -nn1448 + nn1448^2,
  -nn1452 + nn1452^2,
  -nn1456 + nn1456^2,
  -nn1460 + nn1460^2,
  -nn1502 + nn1502^2,
  -nn1462 + nn1462^2,
  -nn1466 + nn1466^2,
  -nn1470 + nn1470^2,
  -nn1474 + nn1474^2,
  -nn1500 + nn1500^2,
  -nn1476 + nn1476^2,
  -nn1480 + nn1480^2,
  -nn1484 + nn1484^2,
  -nn1488 + nn1488^2,
  -nn1498 + nn1498^2,
  -nn1490 + nn1490^2,
  -nn1494 + nn1494^2,
  -nn1496 + nn1496^2
;
ideal FS15 =
  -nn1514 + nn1514^2,
  -nn1528 + nn1528^2,
  -nn1542 + nn1542^2,
  -nn1556 + nn1556^2,
  -nn1570 + nn1570^2,
  -nn1584 + nn1584^2,
  -nn1598 + nn1598^2,
  -nn1612 + nn1612^2,
  -nn1516 + nn1516^2,
  -nn1520 + nn1520^2,
  -nn1522 + nn1522^2,
  -nn1526 + nn1526^2,
  -nn1530 + nn1530^2,
  -nn1534 + nn1534^2,
  -nn1640 + nn1640^2,
  -nn1536 + nn1536^2,
  -nn1540 + nn1540^2,
  -nn1544 + nn1544^2,
  -nn1548 + nn1548^2,
  -nn1638 + nn1638^2,
  -nn1550 + nn1550^2,
  -nn1554 + nn1554^2,
  -nn1558 + nn1558^2,
  -nn1562 + nn1562^2,
  -nn1636 + nn1636^2,
  -nn1564 + nn1564^2,
  -nn1568 + nn1568^2,
  -nn1572 + nn1572^2,
  -nn1576 + nn1576^2,
  -nn1634 + nn1634^2,
  -nn1578 + nn1578^2,
  -nn1582 + nn1582^2,
  -nn1586 + nn1586^2,
  -nn1590 + nn1590^2,
  -nn1632 + nn1632^2,
  -nn1592 + nn1592^2,
  -nn1596 + nn1596^2,
  -nn1600 + nn1600^2,
  -nn1604 + nn1604^2,
  -nn1630 + nn1630^2,
  -nn1606 + nn1606^2,
  -nn1610 + nn1610^2,
  -nn1614 + nn1614^2,
  -nn1618 + nn1618^2,
  -nn1628 + nn1628^2,
  -nn1620 + nn1620^2,
  -nn1624 + nn1624^2,
  -nn1626 + nn1626^2
;
ideal FS16 =
  -nn1642 + nn1642^2,
  -nn1656 + nn1656^2,
  -nn1670 + nn1670^2,
  -nn1684 + nn1684^2,
  -nn1698 + nn1698^2,
  -nn1712 + nn1712^2,
  -nn1726 + nn1726^2,
  -nn1644 + nn1644^2,
  -nn1648 + nn1648^2,
  -nn1650 + nn1650^2,
  -nn1654 + nn1654^2,
  -nn1658 + nn1658^2,
  -nn1662 + nn1662^2,
  -nn1752 + nn1752^2,
  -nn1664 + nn1664^2,
  -nn1668 + nn1668^2,
  -nn1672 + nn1672^2,
  -nn1676 + nn1676^2,
  -nn1750 + nn1750^2,
  -nn1678 + nn1678^2,
  -nn1682 + nn1682^2,
  -nn1686 + nn1686^2,
  -nn1690 + nn1690^2,
  -nn1748 + nn1748^2,
  -nn1692 + nn1692^2,
  -nn1696 + nn1696^2,
  -nn1700 + nn1700^2,
  -nn1704 + nn1704^2,
  -nn1746 + nn1746^2,
  -nn1706 + nn1706^2,
  -nn1710 + nn1710^2,
  -nn1714 + nn1714^2,
  -nn1718 + nn1718^2,
  -nn1744 + nn1744^2,
  -nn1720 + nn1720^2,
  -nn1724 + nn1724^2,
  -nn1728 + nn1728^2,
  -nn1732 + nn1732^2,
  -nn1742 + nn1742^2,
  -nn1734 + nn1734^2,
  -nn1738 + nn1738^2,
  -nn1740 + nn1740^2
;
ideal FS17 =
  -nn1754 + nn1754^2,
  -nn1768 + nn1768^2,
  -nn1782 + nn1782^2,
  -nn1796 + nn1796^2,
  -nn1810 + nn1810^2,
  -nn1824 + nn1824^2,
  -nn1756 + nn1756^2,
  -nn1760 + nn1760^2,
  -nn1762 + nn1762^2,
  -nn1766 + nn1766^2,
  -nn1770 + nn1770^2,
  -nn1774 + nn1774^2,
  -nn1848 + nn1848^2,
  -nn1776 + nn1776^2,
  -nn1780 + nn1780^2,
  -nn1784 + nn1784^2,
  -nn1788 + nn1788^2,
  -nn1846 + nn1846^2,
  -nn1790 + nn1790^2,
  -nn1794 + nn1794^2,
  -nn1798 + nn1798^2,
  -nn1802 + nn1802^2,
  -nn1844 + nn1844^2,
  -nn1804 + nn1804^2,
  -nn1808 + nn1808^2,
  -nn1812 + nn1812^2,
  -nn1816 + nn1816^2,
  -nn1842 + nn1842^2,
  -nn1818 + nn1818^2,
  -nn1822 + nn1822^2,
  -nn1826 + nn1826^2,
  -nn1830 + nn1830^2,
  -nn1840 + nn1840^2,
  -nn1832 + nn1832^2,
  -nn1836 + nn1836^2,
  -nn1838 + nn1838^2
;
ideal FS18 =
  -nn1850 + nn1850^2,
  -nn1864 + nn1864^2,
  -nn1878 + nn1878^2,
  -nn1892 + nn1892^2,
  -nn1906 + nn1906^2,
  -nn1852 + nn1852^2,
  -nn1856 + nn1856^2,
  -nn1858 + nn1858^2,
  -nn1862 + nn1862^2,
  -nn1866 + nn1866^2,
  -nn1870 + nn1870^2,
  -nn1928 + nn1928^2,
  -nn1872 + nn1872^2,
  -nn1876 + nn1876^2,
  -nn1880 + nn1880^2,
  -nn1884 + nn1884^2,
  -nn1926 + nn1926^2,
  -nn1886 + nn1886^2,
  -nn1890 + nn1890^2,
  -nn1894 + nn1894^2,
  -nn1898 + nn1898^2,
  -nn1924 + nn1924^2,
  -nn1900 + nn1900^2,
  -nn1904 + nn1904^2,
  -nn1908 + nn1908^2,
  -nn1912 + nn1912^2,
  -nn1922 + nn1922^2,
  -nn1914 + nn1914^2,
  -nn1918 + nn1918^2,
  -nn1920 + nn1920^2
;
ideal FS19 =
  -nn1930 + nn1930^2,
  -nn1944 + nn1944^2,
  -nn1958 + nn1958^2,
  -nn1972 + nn1972^2,
  -nn1932 + nn1932^2,
  -nn1936 + nn1936^2,
  -nn1938 + nn1938^2,
  -nn1942 + nn1942^2,
  -nn1946 + nn1946^2,
  -nn1950 + nn1950^2,
  -nn1992 + nn1992^2,
  -nn1952 + nn1952^2,
  -nn1956 + nn1956^2,
  -nn1960 + nn1960^2,
  -nn1964 + nn1964^2,
  -nn1990 + nn1990^2,
  -nn1966 + nn1966^2,
  -nn1970 + nn1970^2,
  -nn1974 + nn1974^2,
  -nn1978 + nn1978^2,
  -nn1988 + nn1988^2,
  -nn1980 + nn1980^2,
  -nn1984 + nn1984^2,
  -nn1986 + nn1986^2
;
ideal FS20 =
  -nn1994 + nn1994^2,
  -nn2008 + nn2008^2,
  -nn2022 + nn2022^2,
  -nn1996 + nn1996^2,
  -nn2000 + nn2000^2,
  -nn2002 + nn2002^2,
  -nn2006 + nn2006^2,
  -nn2010 + nn2010^2,
  -nn2014 + nn2014^2,
  -nn2040 + nn2040^2,
  -nn2016 + nn2016^2,
  -nn2020 + nn2020^2,
  -nn2024 + nn2024^2,
  -nn2028 + nn2028^2,
  -nn2038 + nn2038^2,
  -nn2030 + nn2030^2,
  -nn2034 + nn2034^2,
  -nn2036 + nn2036^2
;
ideal FS21 =
  -nn2042 + nn2042^2,
  -nn2056 + nn2056^2,
  -nn2044 + nn2044^2,
  -nn2048 + nn2048^2,
  -nn2050 + nn2050^2,
  -nn2054 + nn2054^2,
  -nn2058 + nn2058^2,
  -nn2062 + nn2062^2,
  -nn2072 + nn2072^2,
  -nn2064 + nn2064^2,
  -nn2068 + nn2068^2,
  -nn2070 + nn2070^2
;
ideal FS22 =
  -nn2074 + nn2074^2,
  -nn2076 + nn2076^2,
  -nn2080 + nn2080^2,
  -nn2082 + nn2082^2,
  -nn2086 + nn2086^2,
  -nn2088 + nn2088^2
;
ideal FS23 =
  0
;
ideal FI =
  -a(0) + a(0)^2,
  -a(1) + a(1)^2,
  -a(2) + a(2)^2,
  -a(3) + a(3)^2,
  -a(4) + a(4)^2,
  -a(5) + a(5)^2,
  -a(6) + a(6)^2,
  -a(7) + a(7)^2,
  -a(8) + a(8)^2,
  -a(9) + a(9)^2,
  -a(10) + a(10)^2,
  -a(11) + a(11)^2,
  -b(0) + b(0)^2,
  -b(1) + b(1)^2,
  -b(2) + b(2)^2,
  -b(3) + b(3)^2,
  -b(4) + b(4)^2,
  -b(5) + b(5)^2,
  -b(6) + b(6)^2,
  -b(7) + b(7)^2,
  -b(8) + b(8)^2,
  -b(9) + b(9)^2,
  -b(10) + b(10)^2,
  -b(11) + b(11)^2
;
ideal CS0 =
  0
;
ideal CS1 =
  0
;
ideal CS2 =
  nn72 * nn66,
  nn80 * nn72
;
ideal CS3 =
  nn98 * nn92,
  nn106 * nn98,
  nn112 * nn106,
  nn120 * nn112
;
ideal CS4 =
  nn140 * nn134,
  nn148 * nn140,
  nn154 * nn148,
  nn162 * nn154,
  nn168 * nn162,
  nn176 * nn168
;
ideal CS5 =
  nn198 * nn192,
  nn206 * nn198,
  nn212 * nn206,
  nn220 * nn212,
  nn226 * nn220,
  nn234 * nn226,
  nn240 * nn234,
  nn248 * nn240
;
ideal CS6 =
  nn272 * nn266,
  nn280 * nn272,
  nn286 * nn280,
  nn294 * nn286,
  nn300 * nn294,
  nn308 * nn300,
  nn314 * nn308,
  nn322 * nn314,
  nn328 * nn322,
  nn336 * nn328
;
ideal CS7 =
  nn362 * nn356,
  nn370 * nn362,
  nn376 * nn370,
  nn384 * nn376,
  nn390 * nn384,
  nn398 * nn390,
  nn404 * nn398,
  nn412 * nn404,
  nn418 * nn412,
  nn426 * nn418,
  nn432 * nn426,
  nn440 * nn432
;
ideal CS8 =
  nn468 * nn462,
  nn476 * nn468,
  nn482 * nn476,
  nn490 * nn482,
  nn496 * nn490,
  nn504 * nn496,
  nn510 * nn504,
  nn518 * nn510,
  nn524 * nn518,
  nn532 * nn524,
  nn538 * nn532,
  nn546 * nn538,
  nn552 * nn546,
  nn560 * nn552
;
ideal CS9 =
  nn590 * nn584,
  nn598 * nn590,
  nn604 * nn598,
  nn612 * nn604,
  nn618 * nn612,
  nn626 * nn618,
  nn632 * nn626,
  nn640 * nn632,
  nn646 * nn640,
  nn654 * nn646,
  nn660 * nn654,
  nn668 * nn660,
  nn674 * nn668,
  nn682 * nn674,
  nn688 * nn682,
  nn696 * nn688
;
ideal CS10 =
  nn728 * nn722,
  nn736 * nn728,
  nn742 * nn736,
  nn750 * nn742,
  nn756 * nn750,
  nn764 * nn756,
  nn770 * nn764,
  nn778 * nn770,
  nn784 * nn778,
  nn792 * nn784,
  nn798 * nn792,
  nn806 * nn798,
  nn812 * nn806,
  nn820 * nn812,
  nn826 * nn820,
  nn834 * nn826,
  nn840 * nn834,
  nn848 * nn840
;
ideal CS11 =
  nn882 * nn876,
  nn890 * nn882,
  nn896 * nn890,
  nn904 * nn896,
  nn910 * nn904,
  nn918 * nn910,
  nn924 * nn918,
  nn932 * nn924,
  nn938 * nn932,
  nn946 * nn938,
  nn952 * nn946,
  nn960 * nn952,
  nn966 * nn960,
  nn974 * nn966,
  nn980 * nn974,
  nn988 * nn980,
  nn994 * nn988,
  nn1002 * nn994,
  nn1008 * nn1002,
  nn1016 * nn1008
;
ideal CS12 =
  nn1052 * nn1044,
  nn1058 * nn1052,
  nn1066 * nn1058,
  nn1072 * nn1066,
  nn1080 * nn1072,
  nn1086 * nn1080,
  nn1094 * nn1086,
  nn1100 * nn1094,
  nn1108 * nn1100,
  nn1114 * nn1108,
  nn1122 * nn1114,
  nn1128 * nn1122,
  nn1136 * nn1128,
  nn1142 * nn1136,
  nn1150 * nn1142,
  nn1156 * nn1150,
  nn1164 * nn1156,
  nn1170 * nn1164,
  nn1178 * nn1170,
  nn1184 * nn1178
;
ideal CS13 =
  nn1218 * nn1212,
  nn1226 * nn1218,
  nn1232 * nn1226,
  nn1240 * nn1232,
  nn1246 * nn1240,
  nn1254 * nn1246,
  nn1260 * nn1254,
  nn1268 * nn1260,
  nn1274 * nn1268,
  nn1282 * nn1274,
  nn1288 * nn1282,
  nn1296 * nn1288,
  nn1302 * nn1296,
  nn1310 * nn1302,
  nn1316 * nn1310,
  nn1324 * nn1316,
  nn1330 * nn1324,
  nn1338 * nn1330,
  nn1344 * nn1338
;
ideal CS14 =
  nn1378 * nn1372,
  nn1386 * nn1378,
  nn1392 * nn1386,
  nn1400 * nn1392,
  nn1406 * nn1400,
  nn1414 * nn1406,
  nn1420 * nn1414,
  nn1428 * nn1420,
  nn1434 * nn1428,
  nn1442 * nn1434,
  nn1448 * nn1442,
  nn1456 * nn1448,
  nn1462 * nn1456,
  nn1470 * nn1462,
  nn1476 * nn1470,
  nn1484 * nn1476,
  nn1490 * nn1484
;
ideal CS15 =
  nn1522 * nn1516,
  nn1530 * nn1522,
  nn1536 * nn1530,
  nn1544 * nn1536,
  nn1550 * nn1544,
  nn1558 * nn1550,
  nn1564 * nn1558,
  nn1572 * nn1564,
  nn1578 * nn1572,
  nn1586 * nn1578,
  nn1592 * nn1586,
  nn1600 * nn1592,
  nn1606 * nn1600,
  nn1614 * nn1606,
  nn1620 * nn1614
;
ideal CS16 =
  nn1650 * nn1644,
  nn1658 * nn1650,
  nn1664 * nn1658,
  nn1672 * nn1664,
  nn1678 * nn1672,
  nn1686 * nn1678,
  nn1692 * nn1686,
  nn1700 * nn1692,
  nn1706 * nn1700,
  nn1714 * nn1706,
  nn1720 * nn1714,
  nn1728 * nn1720,
  nn1734 * nn1728
;
ideal CS17 =
  nn1762 * nn1756,
  nn1770 * nn1762,
  nn1776 * nn1770,
  nn1784 * nn1776,
  nn1790 * nn1784,
  nn1798 * nn1790,
  nn1804 * nn1798,
  nn1812 * nn1804,
  nn1818 * nn1812,
  nn1826 * nn1818,
  nn1832 * nn1826
;
ideal CS18 =
  nn1858 * nn1852,
  nn1866 * nn1858,
  nn1872 * nn1866,
  nn1880 * nn1872,
  nn1886 * nn1880,
  nn1894 * nn1886,
  nn1900 * nn1894,
  nn1908 * nn1900,
  nn1914 * nn1908
;
ideal CS19 =
  nn1938 * nn1932,
  nn1946 * nn1938,
  nn1952 * nn1946,
  nn1960 * nn1952,
  nn1966 * nn1960,
  nn1974 * nn1966,
  nn1980 * nn1974
;
ideal CS20 =
  nn2002 * nn1996,
  nn2010 * nn2002,
  nn2016 * nn2010,
  nn2024 * nn2016,
  nn2030 * nn2024
;
ideal CS21 =
  nn2050 * nn2044,
  nn2058 * nn2050,
  nn2064 * nn2058
;
ideal CS22 =
  nn2082 * nn2076
;
ideal CS23 =
  0
;
ideal HS23 =
  0;
ideal HT23 = 
  FS22, FS23, CS22, CS23, HS23
;
ideal S(23) =
  -s(23) + reduce ((1 - nn2088), HT23)
 ;
ideal T(23) = FI, FS22, FS23, CS22, CS23, S(23);
poly Car(23) =   reduce (s(23) + 2 * Car(24) - PP(23), T(23));
 Car(23);

ideal HS22 =
  -nn2076 + (1 - nn2072) * nn2074, 
  -nn2082 + (1 - nn2070) * nn2080
;
ideal HT22 = 
  FS21, FS22, CS21, CS22, HS22
;
ideal S(22) =
  -nn2074 + a(11) * b(11), 
  -nn2080 + nn2072 + (1 - nn2074) - 2 * nn2072 * (1 - nn2074),
  -nn2086 + nn2070 + (1 - nn2080) - 2 * nn2070 * (1 - nn2080),
  -nn2088 + reduce ((1 - nn2076) * (1 - nn2082), HT22), 
  -s(22) + nn2086
;
ideal T(22) = FI, FS21, FS22, CS21, CS22, S(22);
poly Car(22) =   reduce (s(22) + 2 * Car(23) - PP(22), T(22));
 Car(22);

ideal HS21 =
  -nn2044 + (1 - nn2040) * nn2042, 
  -nn2050 + (1 - nn2038) * nn2048, 
  -nn2058 + nn2054 * nn2056, 
  -nn2064 + (1 - nn2036) * nn2062
;
ideal HT21 = 
  FS20, FS21, CS20, CS21, HS21
;
ideal S(21) =
  -nn2042 + a(11) * b(10), 
  -nn2056 + a(10) * b(11), 
  -nn2048 + nn2040 + (1 - nn2042) - 2 * nn2040 * (1 - nn2042),
  -nn2054 + nn2038 + (1 - nn2048) - 2 * nn2038 * (1 - nn2048),
  -nn2062 + nn2054 + nn2056 - 2 * nn2054 * nn2056,
  -nn2072 + reduce ((1 - nn2044) * (1 - nn2050), HT21), 
  -nn2068 + nn2036 + (1 - nn2062) - 2 * nn2036 * (1 - nn2062),
  -nn2070 + reduce ((1 - nn2058) * (1 - nn2064), HT21), 
  -s(21) + nn2068
;
ideal T(21) = FI, FS20, FS21, CS20, CS21, S(21);
poly Car(21) =   reduce (s(21) + 2 * Car(22) - PP(21), T(21));
 Car(21);

ideal HS20 =
  -nn1996 + (1 - nn1992) * nn1994, 
  -nn2002 + (1 - nn1990) * nn2000, 
  -nn2010 + nn2006 * nn2008, 
  -nn2016 + (1 - nn1988) * nn2014, 
  -nn2024 + nn2020 * nn2022, 
  -nn2030 + (1 - nn1986) * nn2028
;
ideal HT20 = 
  FS19, FS20, CS19, CS20, HS20
;
ideal S(20) =
  -nn1994 + a(11) * b(9), 
  -nn2008 + a(10) * b(10), 
  -nn2022 + a(9) * b(11), 
  -nn2000 + nn1992 + (1 - nn1994) - 2 * nn1992 * (1 - nn1994),
  -nn2006 + nn1990 + (1 - nn2000) - 2 * nn1990 * (1 - nn2000),
  -nn2014 + nn2006 + nn2008 - 2 * nn2006 * nn2008,
  -nn2040 + reduce ((1 - nn1996) * (1 - nn2002), HT20), 
  -nn2020 + nn1988 + (1 - nn2014) - 2 * nn1988 * (1 - nn2014),
  -nn2028 + nn2020 + nn2022 - 2 * nn2020 * nn2022,
  -nn2038 + reduce ((1 - nn2010) * (1 - nn2016), HT20), 
  -nn2034 + nn1986 + (1 - nn2028) - 2 * nn1986 * (1 - nn2028),
  -nn2036 + reduce ((1 - nn2024) * (1 - nn2030), HT20), 
  -s(20) + nn2034
;
ideal T(20) = FI, FS19, FS20, CS19, CS20, S(20);
poly Car(20) =   reduce (s(20) + 2 * Car(21) - PP(20), T(20));
 Car(20);

ideal HS19 =
  -nn1932 + (1 - nn1928) * nn1930, 
  -nn1938 + (1 - nn1926) * nn1936, 
  -nn1946 + nn1942 * nn1944, 
  -nn1952 + (1 - nn1924) * nn1950, 
  -nn1960 + nn1956 * nn1958, 
  -nn1966 + (1 - nn1922) * nn1964, 
  -nn1974 + nn1970 * nn1972, 
  -nn1980 + (1 - nn1920) * nn1978
;
ideal HT19 = 
  FS18, FS19, CS18, CS19, HS19
;
ideal S(19) =
  -nn1930 + a(11) * b(8), 
  -nn1944 + a(10) * b(9), 
  -nn1958 + a(9) * b(10), 
  -nn1972 + a(8) * b(11), 
  -nn1936 + nn1928 + (1 - nn1930) - 2 * nn1928 * (1 - nn1930),
  -nn1942 + nn1926 + (1 - nn1936) - 2 * nn1926 * (1 - nn1936),
  -nn1950 + nn1942 + nn1944 - 2 * nn1942 * nn1944,
  -nn1992 + reduce ((1 - nn1932) * (1 - nn1938), HT19), 
  -nn1956 + nn1924 + (1 - nn1950) - 2 * nn1924 * (1 - nn1950),
  -nn1964 + nn1956 + nn1958 - 2 * nn1956 * nn1958,
  -nn1990 + reduce ((1 - nn1946) * (1 - nn1952), HT19), 
  -nn1970 + nn1922 + (1 - nn1964) - 2 * nn1922 * (1 - nn1964),
  -nn1978 + nn1970 + nn1972 - 2 * nn1970 * nn1972,
  -nn1988 + reduce ((1 - nn1960) * (1 - nn1966), HT19), 
  -nn1984 + nn1920 + (1 - nn1978) - 2 * nn1920 * (1 - nn1978),
  -nn1986 + reduce ((1 - nn1974) * (1 - nn1980), HT19), 
  -s(19) + nn1984
;
ideal T(19) = FI, FS18, FS19, CS18, CS19, S(19);
poly Car(19) =   reduce (s(19) + 2 * Car(20) - PP(19), T(19));
 Car(19);

ideal HS18 =
  -nn1852 + (1 - nn1848) * nn1850, 
  -nn1858 + (1 - nn1846) * nn1856, 
  -nn1866 + nn1862 * nn1864, 
  -nn1872 + (1 - nn1844) * nn1870, 
  -nn1880 + nn1876 * nn1878, 
  -nn1886 + (1 - nn1842) * nn1884, 
  -nn1894 + nn1890 * nn1892, 
  -nn1900 + (1 - nn1840) * nn1898, 
  -nn1908 + nn1904 * nn1906, 
  -nn1914 + (1 - nn1838) * nn1912
;
ideal HT18 = 
  FS17, FS18, CS17, CS18, HS18
;
ideal S(18) =
  -nn1850 + a(11) * b(7), 
  -nn1864 + a(10) * b(8), 
  -nn1878 + a(9) * b(9), 
  -nn1892 + a(8) * b(10), 
  -nn1906 + a(7) * b(11), 
  -nn1856 + nn1848 + (1 - nn1850) - 2 * nn1848 * (1 - nn1850),
  -nn1862 + nn1846 + (1 - nn1856) - 2 * nn1846 * (1 - nn1856),
  -nn1870 + nn1862 + nn1864 - 2 * nn1862 * nn1864,
  -nn1928 + reduce ((1 - nn1852) * (1 - nn1858), HT18), 
  -nn1876 + nn1844 + (1 - nn1870) - 2 * nn1844 * (1 - nn1870),
  -nn1884 + nn1876 + nn1878 - 2 * nn1876 * nn1878,
  -nn1926 + reduce ((1 - nn1866) * (1 - nn1872), HT18), 
  -nn1890 + nn1842 + (1 - nn1884) - 2 * nn1842 * (1 - nn1884),
  -nn1898 + nn1890 + nn1892 - 2 * nn1890 * nn1892,
  -nn1924 + reduce ((1 - nn1880) * (1 - nn1886), HT18), 
  -nn1904 + nn1840 + (1 - nn1898) - 2 * nn1840 * (1 - nn1898),
  -nn1912 + nn1904 + nn1906 - 2 * nn1904 * nn1906,
  -nn1922 + reduce ((1 - nn1894) * (1 - nn1900), HT18), 
  -nn1918 + nn1838 + (1 - nn1912) - 2 * nn1838 * (1 - nn1912),
  -nn1920 + reduce ((1 - nn1908) * (1 - nn1914), HT18), 
  -s(18) + nn1918
;
ideal T(18) = FI, FS17, FS18, CS17, CS18, S(18);
poly Car(18) =   reduce (s(18) + 2 * Car(19) - PP(18), T(18));
 Car(18);

ideal HS17 =
  -nn1756 + (1 - nn1752) * nn1754, 
  -nn1762 + (1 - nn1750) * nn1760, 
  -nn1770 + nn1766 * nn1768, 
  -nn1776 + (1 - nn1748) * nn1774, 
  -nn1784 + nn1780 * nn1782, 
  -nn1790 + (1 - nn1746) * nn1788, 
  -nn1798 + nn1794 * nn1796, 
  -nn1804 + (1 - nn1744) * nn1802, 
  -nn1812 + nn1808 * nn1810, 
  -nn1818 + (1 - nn1742) * nn1816, 
  -nn1826 + nn1822 * nn1824, 
  -nn1832 + (1 - nn1740) * nn1830
;
ideal HT17 = 
  FS16, FS17, CS16, CS17, HS17
;
ideal S(17) =
  -nn1754 + a(11) * b(6), 
  -nn1768 + a(10) * b(7), 
  -nn1782 + a(9) * b(8), 
  -nn1796 + a(8) * b(9), 
  -nn1810 + a(7) * b(10), 
  -nn1824 + a(6) * b(11), 
  -nn1760 + nn1752 + (1 - nn1754) - 2 * nn1752 * (1 - nn1754),
  -nn1766 + nn1750 + (1 - nn1760) - 2 * nn1750 * (1 - nn1760),
  -nn1774 + nn1766 + nn1768 - 2 * nn1766 * nn1768,
  -nn1848 + reduce ((1 - nn1756) * (1 - nn1762), HT17), 
  -nn1780 + nn1748 + (1 - nn1774) - 2 * nn1748 * (1 - nn1774),
  -nn1788 + nn1780 + nn1782 - 2 * nn1780 * nn1782,
  -nn1846 + reduce ((1 - nn1770) * (1 - nn1776), HT17), 
  -nn1794 + nn1746 + (1 - nn1788) - 2 * nn1746 * (1 - nn1788),
  -nn1802 + nn1794 + nn1796 - 2 * nn1794 * nn1796,
  -nn1844 + reduce ((1 - nn1784) * (1 - nn1790), HT17), 
  -nn1808 + nn1744 + (1 - nn1802) - 2 * nn1744 * (1 - nn1802),
  -nn1816 + nn1808 + nn1810 - 2 * nn1808 * nn1810,
  -nn1842 + reduce ((1 - nn1798) * (1 - nn1804), HT17), 
  -nn1822 + nn1742 + (1 - nn1816) - 2 * nn1742 * (1 - nn1816),
  -nn1830 + nn1822 + nn1824 - 2 * nn1822 * nn1824,
  -nn1840 + reduce ((1 - nn1812) * (1 - nn1818), HT17), 
  -nn1836 + nn1740 + (1 - nn1830) - 2 * nn1740 * (1 - nn1830),
  -nn1838 + reduce ((1 - nn1826) * (1 - nn1832), HT17), 
  -s(17) + nn1836
;
ideal T(17) = FI, FS16, FS17, CS16, CS17, S(17);
poly Car(17) =   reduce (s(17) + 2 * Car(18) - PP(17), T(17));
 Car(17);

ideal HS16 =
  -nn1644 + (1 - nn1640) * nn1642, 
  -nn1650 + (1 - nn1638) * nn1648, 
  -nn1658 + nn1654 * nn1656, 
  -nn1664 + (1 - nn1636) * nn1662, 
  -nn1672 + nn1668 * nn1670, 
  -nn1678 + (1 - nn1634) * nn1676, 
  -nn1686 + nn1682 * nn1684, 
  -nn1692 + (1 - nn1632) * nn1690, 
  -nn1700 + nn1696 * nn1698, 
  -nn1706 + (1 - nn1630) * nn1704, 
  -nn1714 + nn1710 * nn1712, 
  -nn1720 + (1 - nn1628) * nn1718, 
  -nn1728 + nn1724 * nn1726, 
  -nn1734 + (1 - nn1626) * nn1732
;
ideal HT16 = 
  FS15, FS16, CS15, CS16, HS16
;
ideal S(16) =
  -nn1642 + a(11) * b(5), 
  -nn1656 + a(10) * b(6), 
  -nn1670 + a(9) * b(7), 
  -nn1684 + a(8) * b(8), 
  -nn1698 + a(7) * b(9), 
  -nn1712 + a(6) * b(10), 
  -nn1726 + a(5) * b(11), 
  -nn1648 + nn1640 + (1 - nn1642) - 2 * nn1640 * (1 - nn1642),
  -nn1654 + nn1638 + (1 - nn1648) - 2 * nn1638 * (1 - nn1648),
  -nn1662 + nn1654 + nn1656 - 2 * nn1654 * nn1656,
  -nn1752 + reduce ((1 - nn1644) * (1 - nn1650), HT16), 
  -nn1668 + nn1636 + (1 - nn1662) - 2 * nn1636 * (1 - nn1662),
  -nn1676 + nn1668 + nn1670 - 2 * nn1668 * nn1670,
  -nn1750 + reduce ((1 - nn1658) * (1 - nn1664), HT16), 
  -nn1682 + nn1634 + (1 - nn1676) - 2 * nn1634 * (1 - nn1676),
  -nn1690 + nn1682 + nn1684 - 2 * nn1682 * nn1684,
  -nn1748 + reduce ((1 - nn1672) * (1 - nn1678), HT16), 
  -nn1696 + nn1632 + (1 - nn1690) - 2 * nn1632 * (1 - nn1690),
  -nn1704 + nn1696 + nn1698 - 2 * nn1696 * nn1698,
  -nn1746 + reduce ((1 - nn1686) * (1 - nn1692), HT16), 
  -nn1710 + nn1630 + (1 - nn1704) - 2 * nn1630 * (1 - nn1704),
  -nn1718 + nn1710 + nn1712 - 2 * nn1710 * nn1712,
  -nn1744 + reduce ((1 - nn1700) * (1 - nn1706), HT16), 
  -nn1724 + nn1628 + (1 - nn1718) - 2 * nn1628 * (1 - nn1718),
  -nn1732 + nn1724 + nn1726 - 2 * nn1724 * nn1726,
  -nn1742 + reduce ((1 - nn1714) * (1 - nn1720), HT16), 
  -nn1738 + nn1626 + (1 - nn1732) - 2 * nn1626 * (1 - nn1732),
  -nn1740 + reduce ((1 - nn1728) * (1 - nn1734), HT16), 
  -s(16) + nn1738
;
ideal T(16) = FI, FS15, FS16, CS15, CS16, S(16);
poly Car(16) =   reduce (s(16) + 2 * Car(17) - PP(16), T(16));
 Car(16);

ideal HS15 =
  -nn1516 + (1 - nn1512) * nn1514, 
  -nn1522 + (1 - nn1510) * nn1520, 
  -nn1530 + nn1526 * nn1528, 
  -nn1536 + (1 - nn1508) * nn1534, 
  -nn1544 + nn1540 * nn1542, 
  -nn1550 + (1 - nn1506) * nn1548, 
  -nn1558 + nn1554 * nn1556, 
  -nn1564 + (1 - nn1504) * nn1562, 
  -nn1572 + nn1568 * nn1570, 
  -nn1578 + (1 - nn1502) * nn1576, 
  -nn1586 + nn1582 * nn1584, 
  -nn1592 + (1 - nn1500) * nn1590, 
  -nn1600 + nn1596 * nn1598, 
  -nn1606 + (1 - nn1498) * nn1604, 
  -nn1614 + nn1610 * nn1612, 
  -nn1620 + (1 - nn1496) * nn1618
;
ideal HT15 = 
  FS14, FS15, CS14, CS15, HS15
;
ideal S(15) =
  -nn1514 + a(11) * b(4), 
  -nn1528 + a(10) * b(5), 
  -nn1542 + a(9) * b(6), 
  -nn1556 + a(8) * b(7), 
  -nn1570 + a(7) * b(8), 
  -nn1584 + a(6) * b(9), 
  -nn1598 + a(5) * b(10), 
  -nn1612 + a(4) * b(11), 
  -nn1520 + nn1512 + (1 - nn1514) - 2 * nn1512 * (1 - nn1514),
  -nn1526 + nn1510 + (1 - nn1520) - 2 * nn1510 * (1 - nn1520),
  -nn1534 + nn1526 + nn1528 - 2 * nn1526 * nn1528,
  -nn1640 + reduce ((1 - nn1516) * (1 - nn1522), HT15), 
  -nn1540 + nn1508 + (1 - nn1534) - 2 * nn1508 * (1 - nn1534),
  -nn1548 + nn1540 + nn1542 - 2 * nn1540 * nn1542,
  -nn1638 + reduce ((1 - nn1530) * (1 - nn1536), HT15), 
  -nn1554 + nn1506 + (1 - nn1548) - 2 * nn1506 * (1 - nn1548),
  -nn1562 + nn1554 + nn1556 - 2 * nn1554 * nn1556,
  -nn1636 + reduce ((1 - nn1544) * (1 - nn1550), HT15), 
  -nn1568 + nn1504 + (1 - nn1562) - 2 * nn1504 * (1 - nn1562),
  -nn1576 + nn1568 + nn1570 - 2 * nn1568 * nn1570,
  -nn1634 + reduce ((1 - nn1558) * (1 - nn1564), HT15), 
  -nn1582 + nn1502 + (1 - nn1576) - 2 * nn1502 * (1 - nn1576),
  -nn1590 + nn1582 + nn1584 - 2 * nn1582 * nn1584,
  -nn1632 + reduce ((1 - nn1572) * (1 - nn1578), HT15), 
  -nn1596 + nn1500 + (1 - nn1590) - 2 * nn1500 * (1 - nn1590),
  -nn1604 + nn1596 + nn1598 - 2 * nn1596 * nn1598,
  -nn1630 + reduce ((1 - nn1586) * (1 - nn1592), HT15), 
  -nn1610 + nn1498 + (1 - nn1604) - 2 * nn1498 * (1 - nn1604),
  -nn1618 + nn1610 + nn1612 - 2 * nn1610 * nn1612,
  -nn1628 + reduce ((1 - nn1600) * (1 - nn1606), HT15), 
  -nn1624 + nn1496 + (1 - nn1618) - 2 * nn1496 * (1 - nn1618),
  -nn1626 + reduce ((1 - nn1614) * (1 - nn1620), HT15), 
  -s(15) + nn1624
;
ideal T(15) = FI, FS14, FS15, CS14, CS15, S(15);
poly Car(15) =   reduce (s(15) + 2 * Car(16) - PP(15), T(15));
 Car(15);

ideal HS14 =
  -nn1372 + (1 - nn1368) * nn1370, 
  -nn1378 + (1 - nn1366) * nn1376, 
  -nn1386 + nn1382 * nn1384, 
  -nn1392 + (1 - nn1364) * nn1390, 
  -nn1400 + nn1396 * nn1398, 
  -nn1406 + (1 - nn1362) * nn1404, 
  -nn1414 + nn1410 * nn1412, 
  -nn1420 + (1 - nn1360) * nn1418, 
  -nn1428 + nn1424 * nn1426, 
  -nn1434 + (1 - nn1358) * nn1432, 
  -nn1442 + nn1438 * nn1440, 
  -nn1448 + (1 - nn1356) * nn1446, 
  -nn1456 + nn1452 * nn1454, 
  -nn1462 + (1 - nn1354) * nn1460, 
  -nn1470 + nn1466 * nn1468, 
  -nn1476 + (1 - nn1352) * nn1474, 
  -nn1484 + nn1480 * nn1482, 
  -nn1490 + (1 - nn1350) * nn1488
;
ideal HT14 = 
  FS13, FS14, CS13, CS14, HS14
;
ideal S(14) =
  -nn1370 + a(11) * b(3), 
  -nn1384 + a(10) * b(4), 
  -nn1398 + a(9) * b(5), 
  -nn1412 + a(8) * b(6), 
  -nn1426 + a(7) * b(7), 
  -nn1440 + a(6) * b(8), 
  -nn1454 + a(5) * b(9), 
  -nn1468 + a(4) * b(10), 
  -nn1482 + a(3) * b(11), 
  -nn1376 + nn1368 + (1 - nn1370) - 2 * nn1368 * (1 - nn1370),
  -nn1382 + nn1366 + (1 - nn1376) - 2 * nn1366 * (1 - nn1376),
  -nn1390 + nn1382 + nn1384 - 2 * nn1382 * nn1384,
  -nn1512 + reduce ((1 - nn1372) * (1 - nn1378), HT14), 
  -nn1396 + nn1364 + (1 - nn1390) - 2 * nn1364 * (1 - nn1390),
  -nn1404 + nn1396 + nn1398 - 2 * nn1396 * nn1398,
  -nn1510 + reduce ((1 - nn1386) * (1 - nn1392), HT14), 
  -nn1410 + nn1362 + (1 - nn1404) - 2 * nn1362 * (1 - nn1404),
  -nn1418 + nn1410 + nn1412 - 2 * nn1410 * nn1412,
  -nn1508 + reduce ((1 - nn1400) * (1 - nn1406), HT14), 
  -nn1424 + nn1360 + (1 - nn1418) - 2 * nn1360 * (1 - nn1418),
  -nn1432 + nn1424 + nn1426 - 2 * nn1424 * nn1426,
  -nn1506 + reduce ((1 - nn1414) * (1 - nn1420), HT14), 
  -nn1438 + nn1358 + (1 - nn1432) - 2 * nn1358 * (1 - nn1432),
  -nn1446 + nn1438 + nn1440 - 2 * nn1438 * nn1440,
  -nn1504 + reduce ((1 - nn1428) * (1 - nn1434), HT14), 
  -nn1452 + nn1356 + (1 - nn1446) - 2 * nn1356 * (1 - nn1446),
  -nn1460 + nn1452 + nn1454 - 2 * nn1452 * nn1454,
  -nn1502 + reduce ((1 - nn1442) * (1 - nn1448), HT14), 
  -nn1466 + nn1354 + (1 - nn1460) - 2 * nn1354 * (1 - nn1460),
  -nn1474 + nn1466 + nn1468 - 2 * nn1466 * nn1468,
  -nn1500 + reduce ((1 - nn1456) * (1 - nn1462), HT14), 
  -nn1480 + nn1352 + (1 - nn1474) - 2 * nn1352 * (1 - nn1474),
  -nn1488 + nn1480 + nn1482 - 2 * nn1480 * nn1482,
  -nn1498 + reduce ((1 - nn1470) * (1 - nn1476), HT14), 
  -nn1494 + nn1350 + (1 - nn1488) - 2 * nn1350 * (1 - nn1488),
  -nn1496 + reduce ((1 - nn1484) * (1 - nn1490), HT14), 
  -s(14) + nn1494
;
ideal T(14) = FI, FS13, FS14, CS13, CS14, S(14);
poly Car(14) =   reduce (s(14) + 2 * Car(15) - PP(14), T(14));
 Car(14);

ideal HS13 =
  -nn1212 + nn1044 * nn1210, 
  -nn1218 + (1 - nn1208) * nn1216, 
  -nn1226 + nn1222 * nn1224, 
  -nn1232 + (1 - nn1206) * nn1230, 
  -nn1240 + nn1236 * nn1238, 
  -nn1246 + (1 - nn1204) * nn1244, 
  -nn1254 + nn1250 * nn1252, 
  -nn1260 + (1 - nn1202) * nn1258, 
  -nn1268 + nn1264 * nn1266, 
  -nn1274 + (1 - nn1200) * nn1272, 
  -nn1282 + nn1278 * nn1280, 
  -nn1288 + (1 - nn1198) * nn1286, 
  -nn1296 + nn1292 * nn1294, 
  -nn1302 + (1 - nn1196) * nn1300, 
  -nn1310 + nn1306 * nn1308, 
  -nn1316 + (1 - nn1194) * nn1314, 
  -nn1324 + nn1320 * nn1322, 
  -nn1330 + (1 - nn1192) * nn1328, 
  -nn1338 + nn1334 * nn1336, 
  -nn1344 + (1 - nn1190) * nn1342
;
ideal HT13 = 
  FS12, FS13, CS12, CS13, HS13
;
ideal S(13) =
  -nn1210 + a(11) * b(2), 
  -nn1224 + a(10) * b(3), 
  -nn1238 + a(9) * b(4), 
  -nn1252 + a(8) * b(5), 
  -nn1266 + a(7) * b(6), 
  -nn1280 + a(6) * b(7), 
  -nn1294 + a(5) * b(8), 
  -nn1308 + a(4) * b(9), 
  -nn1322 + a(3) * b(10), 
  -nn1336 + a(2) * b(11), 
  -nn1216 + nn1044 + nn1210 - 2 * nn1044 * nn1210,
  -nn1222 + nn1208 + (1 - nn1216) - 2 * nn1208 * (1 - nn1216),
  -nn1230 + nn1222 + nn1224 - 2 * nn1222 * nn1224,
  -nn1368 + reduce ((1 - nn1212) * (1 - nn1218), HT13), 
  -nn1236 + nn1206 + (1 - nn1230) - 2 * nn1206 * (1 - nn1230),
  -nn1244 + nn1236 + nn1238 - 2 * nn1236 * nn1238,
  -nn1366 + reduce ((1 - nn1226) * (1 - nn1232), HT13), 
  -nn1250 + nn1204 + (1 - nn1244) - 2 * nn1204 * (1 - nn1244),
  -nn1258 + nn1250 + nn1252 - 2 * nn1250 * nn1252,
  -nn1364 + reduce ((1 - nn1240) * (1 - nn1246), HT13), 
  -nn1264 + nn1202 + (1 - nn1258) - 2 * nn1202 * (1 - nn1258),
  -nn1272 + nn1264 + nn1266 - 2 * nn1264 * nn1266,
  -nn1362 + reduce ((1 - nn1254) * (1 - nn1260), HT13), 
  -nn1278 + nn1200 + (1 - nn1272) - 2 * nn1200 * (1 - nn1272),
  -nn1286 + nn1278 + nn1280 - 2 * nn1278 * nn1280,
  -nn1360 + reduce ((1 - nn1268) * (1 - nn1274), HT13), 
  -nn1292 + nn1198 + (1 - nn1286) - 2 * nn1198 * (1 - nn1286),
  -nn1300 + nn1292 + nn1294 - 2 * nn1292 * nn1294,
  -nn1358 + reduce ((1 - nn1282) * (1 - nn1288), HT13), 
  -nn1306 + nn1196 + (1 - nn1300) - 2 * nn1196 * (1 - nn1300),
  -nn1314 + nn1306 + nn1308 - 2 * nn1306 * nn1308,
  -nn1356 + reduce ((1 - nn1296) * (1 - nn1302), HT13), 
  -nn1320 + nn1194 + (1 - nn1314) - 2 * nn1194 * (1 - nn1314),
  -nn1328 + nn1320 + nn1322 - 2 * nn1320 * nn1322,
  -nn1354 + reduce ((1 - nn1310) * (1 - nn1316), HT13), 
  -nn1334 + nn1192 + (1 - nn1328) - 2 * nn1192 * (1 - nn1328),
  -nn1342 + nn1334 + nn1336 - 2 * nn1334 * nn1336,
  -nn1352 + reduce ((1 - nn1324) * (1 - nn1330), HT13), 
  -nn1348 + nn1190 + (1 - nn1342) - 2 * nn1190 * (1 - nn1342),
  -nn1350 + reduce ((1 - nn1338) * (1 - nn1344), HT13), 
  -s(13) + nn1348
;
ideal T(13) = FI, FS12, FS13, CS12, CS13, S(13);
poly Car(13) =   reduce (s(13) + 2 * Car(14) - PP(13), T(13));
 Car(13);

ideal HS12 =
  -nn1052 + nn1048 * nn1050, 
  -nn1058 + (1 - nn1038) * nn1056, 
  -nn1066 + nn1062 * nn1064, 
  -nn1072 + (1 - nn1036) * nn1070, 
  -nn1080 + nn1076 * nn1078, 
  -nn1086 + (1 - nn1034) * nn1084, 
  -nn1094 + nn1090 * nn1092, 
  -nn1100 + (1 - nn1032) * nn1098, 
  -nn1108 + nn1104 * nn1106, 
  -nn1114 + (1 - nn1030) * nn1112, 
  -nn1122 + nn1118 * nn1120, 
  -nn1128 + (1 - nn1028) * nn1126, 
  -nn1136 + nn1132 * nn1134, 
  -nn1142 + (1 - nn1026) * nn1140, 
  -nn1150 + nn1146 * nn1148, 
  -nn1156 + (1 - nn1024) * nn1154, 
  -nn1164 + nn1160 * nn1162, 
  -nn1170 + (1 - nn1022) * nn1168, 
  -nn1178 + nn1174 * nn1176, 
  -nn1184 + nn1016 * nn1182
;
ideal HT12 = 
  FS11, FS12, CS11, CS12, HS12
;
ideal S(12) =
  -nn1042 + a(11) * b(1), 
  -nn1050 + a(10) * b(2), 
  -nn1064 + a(9) * b(3), 
  -nn1078 + a(8) * b(4), 
  -nn1092 + a(7) * b(5), 
  -nn1106 + a(6) * b(6), 
  -nn1120 + a(5) * b(7), 
  -nn1134 + a(4) * b(8), 
  -nn1148 + a(3) * b(9), 
  -nn1162 + a(2) * b(10), 
  -nn1176 + a(1) * b(11), 
  -nn1044 + (1 - nn1040) * nn1042, 
  -nn1048 + nn1040 + (1 - nn1042) - 2 * nn1040 * (1 - nn1042),
  -nn1056 + nn1048 + nn1050 - 2 * nn1048 * nn1050,
  -nn1062 + nn1038 + (1 - nn1056) - 2 * nn1038 * (1 - nn1056),
  -nn1070 + nn1062 + nn1064 - 2 * nn1062 * nn1064,
  -nn1208 + reduce ((1 - nn1052) * (1 - nn1058), HT12), 
  -nn1076 + nn1036 + (1 - nn1070) - 2 * nn1036 * (1 - nn1070),
  -nn1084 + nn1076 + nn1078 - 2 * nn1076 * nn1078,
  -nn1206 + reduce ((1 - nn1066) * (1 - nn1072), HT12), 
  -nn1090 + nn1034 + (1 - nn1084) - 2 * nn1034 * (1 - nn1084),
  -nn1098 + nn1090 + nn1092 - 2 * nn1090 * nn1092,
  -nn1204 + reduce ((1 - nn1080) * (1 - nn1086), HT12), 
  -nn1104 + nn1032 + (1 - nn1098) - 2 * nn1032 * (1 - nn1098),
  -nn1112 + nn1104 + nn1106 - 2 * nn1104 * nn1106,
  -nn1202 + reduce ((1 - nn1094) * (1 - nn1100), HT12), 
  -nn1118 + nn1030 + (1 - nn1112) - 2 * nn1030 * (1 - nn1112),
  -nn1126 + nn1118 + nn1120 - 2 * nn1118 * nn1120,
  -nn1200 + reduce ((1 - nn1108) * (1 - nn1114), HT12), 
  -nn1132 + nn1028 + (1 - nn1126) - 2 * nn1028 * (1 - nn1126),
  -nn1140 + nn1132 + nn1134 - 2 * nn1132 * nn1134,
  -nn1198 + reduce ((1 - nn1122) * (1 - nn1128), HT12), 
  -nn1146 + nn1026 + (1 - nn1140) - 2 * nn1026 * (1 - nn1140),
  -nn1154 + nn1146 + nn1148 - 2 * nn1146 * nn1148,
  -nn1196 + reduce ((1 - nn1136) * (1 - nn1142), HT12), 
  -nn1160 + nn1024 + (1 - nn1154) - 2 * nn1024 * (1 - nn1154),
  -nn1168 + nn1160 + nn1162 - 2 * nn1160 * nn1162,
  -nn1194 + reduce ((1 - nn1150) * (1 - nn1156), HT12), 
  -nn1174 + nn1022 + (1 - nn1168) - 2 * nn1022 * (1 - nn1168),
  -nn1182 + nn1174 + nn1176 - 2 * nn1174 * nn1176,
  -nn1192 + reduce ((1 - nn1164) * (1 - nn1170), HT12), 
  -nn1188 + nn1016 + nn1182 - 2 * nn1016 * nn1182,
  -nn1190 + reduce ((1 - nn1178) * (1 - nn1184), HT12), 
  -s(12) + nn1188
;
ideal T(12) = FI, FS11, FS12, CS11, CS12, S(12);
poly Car(12) =   reduce (s(12) + 2 * Car(13) - PP(12), T(12));
 Car(12);

ideal HS11 =
  -nn876 + nn872 * nn874, 
  -nn882 + (1 - nn870) * nn880, 
  -nn890 + nn886 * nn888, 
  -nn896 + (1 - nn868) * nn894, 
  -nn904 + nn900 * nn902, 
  -nn910 + (1 - nn866) * nn908, 
  -nn918 + nn914 * nn916, 
  -nn924 + (1 - nn864) * nn922, 
  -nn932 + nn928 * nn930, 
  -nn938 + (1 - nn862) * nn936, 
  -nn946 + nn942 * nn944, 
  -nn952 + (1 - nn860) * nn950, 
  -nn960 + nn956 * nn958, 
  -nn966 + (1 - nn858) * nn964, 
  -nn974 + nn970 * nn972, 
  -nn980 + (1 - nn856) * nn978, 
  -nn988 + nn984 * nn986, 
  -nn994 + (1 - nn854) * nn992, 
  -nn1002 + nn998 * nn1000, 
  -nn1008 + nn848 * nn1006
;
ideal HT11 = 
  FS10, FS11, CS10, CS11, HS11
;
ideal S(11) =
  -nn872 + a(11) * b(0), 
  -nn874 + a(10) * b(1), 
  -nn888 + a(9) * b(2), 
  -nn902 + a(8) * b(3), 
  -nn916 + a(7) * b(4), 
  -nn930 + a(6) * b(5), 
  -nn944 + a(5) * b(6), 
  -nn958 + a(4) * b(7), 
  -nn972 + a(3) * b(8), 
  -nn986 + a(2) * b(9), 
  -nn1000 + a(1) * b(10), 
  -nn1014 + a(0) * b(11), 
  -nn880 + nn872 + nn874 - 2 * nn872 * nn874,
  -nn886 + nn870 + (1 - nn880) - 2 * nn870 * (1 - nn880),
  -nn894 + nn886 + nn888 - 2 * nn886 * nn888,
  -nn1040 + reduce ((1 - nn876) * (1 - nn882), HT11), 
  -nn900 + nn868 + (1 - nn894) - 2 * nn868 * (1 - nn894),
  -nn908 + nn900 + nn902 - 2 * nn900 * nn902,
  -nn1038 + reduce ((1 - nn890) * (1 - nn896), HT11), 
  -nn914 + nn866 + (1 - nn908) - 2 * nn866 * (1 - nn908),
  -nn922 + nn914 + nn916 - 2 * nn914 * nn916,
  -nn1036 + reduce ((1 - nn904) * (1 - nn910), HT11), 
  -nn928 + nn864 + (1 - nn922) - 2 * nn864 * (1 - nn922),
  -nn936 + nn928 + nn930 - 2 * nn928 * nn930,
  -nn1034 + reduce ((1 - nn918) * (1 - nn924), HT11), 
  -nn942 + nn862 + (1 - nn936) - 2 * nn862 * (1 - nn936),
  -nn950 + nn942 + nn944 - 2 * nn942 * nn944,
  -nn1032 + reduce ((1 - nn932) * (1 - nn938), HT11), 
  -nn956 + nn860 + (1 - nn950) - 2 * nn860 * (1 - nn950),
  -nn964 + nn956 + nn958 - 2 * nn956 * nn958,
  -nn1030 + reduce ((1 - nn946) * (1 - nn952), HT11), 
  -nn970 + nn858 + (1 - nn964) - 2 * nn858 * (1 - nn964),
  -nn978 + nn970 + nn972 - 2 * nn970 * nn972,
  -nn1028 + reduce ((1 - nn960) * (1 - nn966), HT11), 
  -nn984 + nn856 + (1 - nn978) - 2 * nn856 * (1 - nn978),
  -nn992 + nn984 + nn986 - 2 * nn984 * nn986,
  -nn1026 + reduce ((1 - nn974) * (1 - nn980), HT11), 
  -nn998 + nn854 + (1 - nn992) - 2 * nn854 * (1 - nn992),
  -nn1006 + nn998 + nn1000 - 2 * nn998 * nn1000,
  -nn1024 + reduce ((1 - nn988) * (1 - nn994), HT11), 
  -nn1012 + nn848 + nn1006 - 2 * nn848 * nn1006,
  -nn1016 + nn1012 * nn1014, 
  -nn1020 + nn1012 + nn1014 - 2 * nn1012 * nn1014,
  -nn1022 + reduce ((1 - nn1002) * (1 - nn1008), HT11), 
  -s(11) + nn1020
;
ideal T(11) = FI, FS10, FS11, CS10, CS11, S(11);
poly Car(11) =   reduce (s(11) + 2 * Car(12) - PP(11), T(11));
 Car(11);

ideal HS10 =
  -nn722 + nn718 * nn720, 
  -nn728 + (1 - nn716) * nn726, 
  -nn736 + nn732 * nn734, 
  -nn742 + (1 - nn714) * nn740, 
  -nn750 + nn746 * nn748, 
  -nn756 + (1 - nn712) * nn754, 
  -nn764 + nn760 * nn762, 
  -nn770 + (1 - nn710) * nn768, 
  -nn778 + nn774 * nn776, 
  -nn784 + (1 - nn708) * nn782, 
  -nn792 + nn788 * nn790, 
  -nn798 + (1 - nn706) * nn796, 
  -nn806 + nn802 * nn804, 
  -nn812 + (1 - nn704) * nn810, 
  -nn820 + nn816 * nn818, 
  -nn826 + (1 - nn702) * nn824, 
  -nn834 + nn830 * nn832, 
  -nn840 + nn696 * nn838
;
ideal HT10 = 
  FS9, FS10, CS9, CS10, HS10
;
ideal S(10) =
  -nn718 + a(10) * b(0), 
  -nn720 + a(9) * b(1), 
  -nn734 + a(8) * b(2), 
  -nn748 + a(7) * b(3), 
  -nn762 + a(6) * b(4), 
  -nn776 + a(5) * b(5), 
  -nn790 + a(4) * b(6), 
  -nn804 + a(3) * b(7), 
  -nn818 + a(2) * b(8), 
  -nn832 + a(1) * b(9), 
  -nn846 + a(0) * b(10), 
  -nn726 + nn718 + nn720 - 2 * nn718 * nn720,
  -nn732 + nn716 + (1 - nn726) - 2 * nn716 * (1 - nn726),
  -nn740 + nn732 + nn734 - 2 * nn732 * nn734,
  -nn870 + reduce ((1 - nn722) * (1 - nn728), HT10), 
  -nn746 + nn714 + (1 - nn740) - 2 * nn714 * (1 - nn740),
  -nn754 + nn746 + nn748 - 2 * nn746 * nn748,
  -nn868 + reduce ((1 - nn736) * (1 - nn742), HT10), 
  -nn760 + nn712 + (1 - nn754) - 2 * nn712 * (1 - nn754),
  -nn768 + nn760 + nn762 - 2 * nn760 * nn762,
  -nn866 + reduce ((1 - nn750) * (1 - nn756), HT10), 
  -nn774 + nn710 + (1 - nn768) - 2 * nn710 * (1 - nn768),
  -nn782 + nn774 + nn776 - 2 * nn774 * nn776,
  -nn864 + reduce ((1 - nn764) * (1 - nn770), HT10), 
  -nn788 + nn708 + (1 - nn782) - 2 * nn708 * (1 - nn782),
  -nn796 + nn788 + nn790 - 2 * nn788 * nn790,
  -nn862 + reduce ((1 - nn778) * (1 - nn784), HT10), 
  -nn802 + nn706 + (1 - nn796) - 2 * nn706 * (1 - nn796),
  -nn810 + nn802 + nn804 - 2 * nn802 * nn804,
  -nn860 + reduce ((1 - nn792) * (1 - nn798), HT10), 
  -nn816 + nn704 + (1 - nn810) - 2 * nn704 * (1 - nn810),
  -nn824 + nn816 + nn818 - 2 * nn816 * nn818,
  -nn858 + reduce ((1 - nn806) * (1 - nn812), HT10), 
  -nn830 + nn702 + (1 - nn824) - 2 * nn702 * (1 - nn824),
  -nn838 + nn830 + nn832 - 2 * nn830 * nn832,
  -nn856 + reduce ((1 - nn820) * (1 - nn826), HT10), 
  -nn844 + nn696 + nn838 - 2 * nn696 * nn838,
  -nn848 + nn844 * nn846, 
  -nn852 + nn844 + nn846 - 2 * nn844 * nn846,
  -nn854 + reduce ((1 - nn834) * (1 - nn840), HT10), 
  -s(10) + nn852
;
ideal T(10) = FI, FS9, FS10, CS9, CS10, S(10);
poly Car(10) =   reduce (s(10) + 2 * Car(11) - PP(10), T(10));
 Car(10);

ideal HS9 =
  -nn584 + nn580 * nn582, 
  -nn590 + (1 - nn578) * nn588, 
  -nn598 + nn594 * nn596, 
  -nn604 + (1 - nn576) * nn602, 
  -nn612 + nn608 * nn610, 
  -nn618 + (1 - nn574) * nn616, 
  -nn626 + nn622 * nn624, 
  -nn632 + (1 - nn572) * nn630, 
  -nn640 + nn636 * nn638, 
  -nn646 + (1 - nn570) * nn644, 
  -nn654 + nn650 * nn652, 
  -nn660 + (1 - nn568) * nn658, 
  -nn668 + nn664 * nn666, 
  -nn674 + (1 - nn566) * nn672, 
  -nn682 + nn678 * nn680, 
  -nn688 + nn560 * nn686
;
ideal HT9 = 
  FS8, FS9, CS8, CS9, HS9
;
ideal S(9) =
  -nn580 + a(9) * b(0), 
  -nn582 + a(8) * b(1), 
  -nn596 + a(7) * b(2), 
  -nn610 + a(6) * b(3), 
  -nn624 + a(5) * b(4), 
  -nn638 + a(4) * b(5), 
  -nn652 + a(3) * b(6), 
  -nn666 + a(2) * b(7), 
  -nn680 + a(1) * b(8), 
  -nn694 + a(0) * b(9), 
  -nn588 + nn580 + nn582 - 2 * nn580 * nn582,
  -nn594 + nn578 + (1 - nn588) - 2 * nn578 * (1 - nn588),
  -nn602 + nn594 + nn596 - 2 * nn594 * nn596,
  -nn716 + reduce ((1 - nn584) * (1 - nn590), HT9), 
  -nn608 + nn576 + (1 - nn602) - 2 * nn576 * (1 - nn602),
  -nn616 + nn608 + nn610 - 2 * nn608 * nn610,
  -nn714 + reduce ((1 - nn598) * (1 - nn604), HT9), 
  -nn622 + nn574 + (1 - nn616) - 2 * nn574 * (1 - nn616),
  -nn630 + nn622 + nn624 - 2 * nn622 * nn624,
  -nn712 + reduce ((1 - nn612) * (1 - nn618), HT9), 
  -nn636 + nn572 + (1 - nn630) - 2 * nn572 * (1 - nn630),
  -nn644 + nn636 + nn638 - 2 * nn636 * nn638,
  -nn710 + reduce ((1 - nn626) * (1 - nn632), HT9), 
  -nn650 + nn570 + (1 - nn644) - 2 * nn570 * (1 - nn644),
  -nn658 + nn650 + nn652 - 2 * nn650 * nn652,
  -nn708 + reduce ((1 - nn640) * (1 - nn646), HT9), 
  -nn664 + nn568 + (1 - nn658) - 2 * nn568 * (1 - nn658),
  -nn672 + nn664 + nn666 - 2 * nn664 * nn666,
  -nn706 + reduce ((1 - nn654) * (1 - nn660), HT9), 
  -nn678 + nn566 + (1 - nn672) - 2 * nn566 * (1 - nn672),
  -nn686 + nn678 + nn680 - 2 * nn678 * nn680,
  -nn704 + reduce ((1 - nn668) * (1 - nn674), HT9), 
  -nn692 + nn560 + nn686 - 2 * nn560 * nn686,
  -nn696 + nn692 * nn694, 
  -nn700 + nn692 + nn694 - 2 * nn692 * nn694,
  -nn702 + reduce ((1 - nn682) * (1 - nn688), HT9), 
  -s(9) + nn700
;
ideal T(9) = FI, FS8, FS9, CS8, CS9, S(9);
poly Car(9) =   reduce (s(9) + 2 * Car(10) - PP(9), T(9));
 Car(9);

ideal HS8 =
  -nn462 + nn458 * nn460, 
  -nn468 + (1 - nn456) * nn466, 
  -nn476 + nn472 * nn474, 
  -nn482 + (1 - nn454) * nn480, 
  -nn490 + nn486 * nn488, 
  -nn496 + (1 - nn452) * nn494, 
  -nn504 + nn500 * nn502, 
  -nn510 + (1 - nn450) * nn508, 
  -nn518 + nn514 * nn516, 
  -nn524 + (1 - nn448) * nn522, 
  -nn532 + nn528 * nn530, 
  -nn538 + (1 - nn446) * nn536, 
  -nn546 + nn542 * nn544, 
  -nn552 + nn440 * nn550
;
ideal HT8 = 
  FS7, FS8, CS7, CS8, HS8
;
ideal S(8) =
  -nn458 + a(8) * b(0), 
  -nn460 + a(7) * b(1), 
  -nn474 + a(6) * b(2), 
  -nn488 + a(5) * b(3), 
  -nn502 + a(4) * b(4), 
  -nn516 + a(3) * b(5), 
  -nn530 + a(2) * b(6), 
  -nn544 + a(1) * b(7), 
  -nn558 + a(0) * b(8), 
  -nn466 + nn458 + nn460 - 2 * nn458 * nn460,
  -nn472 + nn456 + (1 - nn466) - 2 * nn456 * (1 - nn466),
  -nn480 + nn472 + nn474 - 2 * nn472 * nn474,
  -nn578 + reduce ((1 - nn462) * (1 - nn468), HT8), 
  -nn486 + nn454 + (1 - nn480) - 2 * nn454 * (1 - nn480),
  -nn494 + nn486 + nn488 - 2 * nn486 * nn488,
  -nn576 + reduce ((1 - nn476) * (1 - nn482), HT8), 
  -nn500 + nn452 + (1 - nn494) - 2 * nn452 * (1 - nn494),
  -nn508 + nn500 + nn502 - 2 * nn500 * nn502,
  -nn574 + reduce ((1 - nn490) * (1 - nn496), HT8), 
  -nn514 + nn450 + (1 - nn508) - 2 * nn450 * (1 - nn508),
  -nn522 + nn514 + nn516 - 2 * nn514 * nn516,
  -nn572 + reduce ((1 - nn504) * (1 - nn510), HT8), 
  -nn528 + nn448 + (1 - nn522) - 2 * nn448 * (1 - nn522),
  -nn536 + nn528 + nn530 - 2 * nn528 * nn530,
  -nn570 + reduce ((1 - nn518) * (1 - nn524), HT8), 
  -nn542 + nn446 + (1 - nn536) - 2 * nn446 * (1 - nn536),
  -nn550 + nn542 + nn544 - 2 * nn542 * nn544,
  -nn568 + reduce ((1 - nn532) * (1 - nn538), HT8), 
  -nn556 + nn440 + nn550 - 2 * nn440 * nn550,
  -nn560 + nn556 * nn558, 
  -nn564 + nn556 + nn558 - 2 * nn556 * nn558,
  -nn566 + reduce ((1 - nn546) * (1 - nn552), HT8), 
  -s(8) + nn564
;
ideal T(8) = FI, FS7, FS8, CS7, CS8, S(8);
poly Car(8) =   reduce (s(8) + 2 * Car(9) - PP(8), T(8));
 Car(8);

ideal HS7 =
  -nn356 + nn352 * nn354, 
  -nn362 + (1 - nn350) * nn360, 
  -nn370 + nn366 * nn368, 
  -nn376 + (1 - nn348) * nn374, 
  -nn384 + nn380 * nn382, 
  -nn390 + (1 - nn346) * nn388, 
  -nn398 + nn394 * nn396, 
  -nn404 + (1 - nn344) * nn402, 
  -nn412 + nn408 * nn410, 
  -nn418 + (1 - nn342) * nn416, 
  -nn426 + nn422 * nn424, 
  -nn432 + nn336 * nn430
;
ideal HT7 = 
  FS6, FS7, CS6, CS7, HS7
;
ideal S(7) =
  -nn352 + a(7) * b(0), 
  -nn354 + a(6) * b(1), 
  -nn368 + a(5) * b(2), 
  -nn382 + a(4) * b(3), 
  -nn396 + a(3) * b(4), 
  -nn410 + a(2) * b(5), 
  -nn424 + a(1) * b(6), 
  -nn438 + a(0) * b(7), 
  -nn360 + nn352 + nn354 - 2 * nn352 * nn354,
  -nn366 + nn350 + (1 - nn360) - 2 * nn350 * (1 - nn360),
  -nn374 + nn366 + nn368 - 2 * nn366 * nn368,
  -nn456 + reduce ((1 - nn356) * (1 - nn362), HT7), 
  -nn380 + nn348 + (1 - nn374) - 2 * nn348 * (1 - nn374),
  -nn388 + nn380 + nn382 - 2 * nn380 * nn382,
  -nn454 + reduce ((1 - nn370) * (1 - nn376), HT7), 
  -nn394 + nn346 + (1 - nn388) - 2 * nn346 * (1 - nn388),
  -nn402 + nn394 + nn396 - 2 * nn394 * nn396,
  -nn452 + reduce ((1 - nn384) * (1 - nn390), HT7), 
  -nn408 + nn344 + (1 - nn402) - 2 * nn344 * (1 - nn402),
  -nn416 + nn408 + nn410 - 2 * nn408 * nn410,
  -nn450 + reduce ((1 - nn398) * (1 - nn404), HT7), 
  -nn422 + nn342 + (1 - nn416) - 2 * nn342 * (1 - nn416),
  -nn430 + nn422 + nn424 - 2 * nn422 * nn424,
  -nn448 + reduce ((1 - nn412) * (1 - nn418), HT7), 
  -nn436 + nn336 + nn430 - 2 * nn336 * nn430,
  -nn440 + nn436 * nn438, 
  -nn444 + nn436 + nn438 - 2 * nn436 * nn438,
  -nn446 + reduce ((1 - nn426) * (1 - nn432), HT7), 
  -s(7) + nn444
;
ideal T(7) = FI, FS6, FS7, CS6, CS7, S(7);
poly Car(7) =   reduce (s(7) + 2 * Car(8) - PP(7), T(7));
 Car(7);

ideal HS6 =
  -nn266 + nn262 * nn264, 
  -nn272 + (1 - nn260) * nn270, 
  -nn280 + nn276 * nn278, 
  -nn286 + (1 - nn258) * nn284, 
  -nn294 + nn290 * nn292, 
  -nn300 + (1 - nn256) * nn298, 
  -nn308 + nn304 * nn306, 
  -nn314 + (1 - nn254) * nn312, 
  -nn322 + nn318 * nn320, 
  -nn328 + nn248 * nn326
;
ideal HT6 = 
  FS5, FS6, CS5, CS6, HS6
;
ideal S(6) =
  -nn262 + a(6) * b(0), 
  -nn264 + a(5) * b(1), 
  -nn278 + a(4) * b(2), 
  -nn292 + a(3) * b(3), 
  -nn306 + a(2) * b(4), 
  -nn320 + a(1) * b(5), 
  -nn334 + a(0) * b(6), 
  // -nn270 + nn262 + nn264 - 2 * nn262 * nn264,
  -nn270 + nn262 * nn264,//bug
  -nn276 + nn260 + (1 - nn270) - 2 * nn260 * (1 - nn270),
  -nn284 + nn276 + nn278 - 2 * nn276 * nn278,
  -nn350 + reduce ((1 - nn266) * (1 - nn272), HT6), 
  -nn290 + nn258 + (1 - nn284) - 2 * nn258 * (1 - nn284),
  -nn298 + nn290 + nn292 - 2 * nn290 * nn292,
  -nn348 + reduce ((1 - nn280) * (1 - nn286), HT6), 
  -nn304 + nn256 + (1 - nn298) - 2 * nn256 * (1 - nn298),
  -nn312 + nn304 + nn306 - 2 * nn304 * nn306,
  -nn346 + reduce ((1 - nn294) * (1 - nn300), HT6), 
  -nn318 + nn254 + (1 - nn312) - 2 * nn254 * (1 - nn312),
  -nn326 + nn318 + nn320 - 2 * nn318 * nn320,
  -nn344 + reduce ((1 - nn308) * (1 - nn314), HT6), 
  -nn332 + nn248 + nn326 - 2 * nn248 * nn326,
  -nn336 + nn332 * nn334, 
  -nn340 + nn332 + nn334 - 2 * nn332 * nn334,
  -nn342 + reduce ((1 - nn322) * (1 - nn328), HT6), 
  -s(6) + nn340
;
ideal T(6) = FI, FS5, FS6, CS5, CS6, S(6);
poly Car(6) =   reduce (s(6) + 2 * Car(7) - PP(6), T(6));
 Car(6);

ideal HS5 =
  -nn192 + nn188 * nn190, 
  -nn198 + (1 - nn186) * nn196, 
  -nn206 + nn202 * nn204, 
  -nn212 + (1 - nn184) * nn210, 
  -nn220 + nn216 * nn218, 
  -nn226 + (1 - nn182) * nn224, 
  -nn234 + nn230 * nn232, 
  -nn240 + nn176 * nn238
;
ideal HT5 = 
  FS4, FS5, CS4, CS5, HS5
;
ideal S(5) =
  -nn188 + a(5) * b(0), 
  -nn190 + a(4) * b(1), 
  -nn204 + a(3) * b(2), 
  -nn218 + a(2) * b(3), 
  -nn232 + a(1) * b(4), 
  -nn246 + a(0) * b(5), 
  -nn196 + nn188 + nn190 - 2 * nn188 * nn190,
  -nn202 + nn186 + (1 - nn196) - 2 * nn186 * (1 - nn196),
  -nn210 + nn202 + nn204 - 2 * nn202 * nn204,
  -nn260 + reduce ((1 - nn192) * (1 - nn198), HT5), 
  -nn216 + nn184 + (1 - nn210) - 2 * nn184 * (1 - nn210),
  -nn224 + nn216 + nn218 - 2 * nn216 * nn218,
  -nn258 + reduce ((1 - nn206) * (1 - nn212), HT5), 
  -nn230 + nn182 + (1 - nn224) - 2 * nn182 * (1 - nn224),
  -nn238 + nn230 + nn232 - 2 * nn230 * nn232,
  -nn256 + reduce ((1 - nn220) * (1 - nn226), HT5), 
  -nn244 + nn176 + nn238 - 2 * nn176 * nn238,
  -nn248 + nn244 * nn246, 
  -nn252 + nn244 + nn246 - 2 * nn244 * nn246,
  -nn254 + reduce ((1 - nn234) * (1 - nn240), HT5), 
  -s(5) + nn252
;
ideal T(5) = FI, FS4, FS5, CS4, CS5, S(5);
poly Car(5) =   reduce (s(5) + 2 * Car(6) - PP(5), T(5));
 Car(5);

ideal HS4 =
  -nn134 + nn130 * nn132, 
  -nn140 + (1 - nn128) * nn138, 
  -nn148 + nn144 * nn146, 
  -nn154 + (1 - nn126) * nn152, 
  -nn162 + nn158 * nn160, 
  -nn168 + nn120 * nn166
;
ideal HT4 = 
  FS3, FS4, CS3, CS4, HS4
;
ideal S(4) =
  -nn130 + a(4) * b(0), 
  -nn132 + a(3) * b(1), 
  -nn146 + a(2) * b(2), 
  -nn160 + a(1) * b(3), 
  -nn174 + a(0) * b(4), 
  -nn138 + nn130 + nn132 - 2 * nn130 * nn132,
  -nn144 + nn128 + (1 - nn138) - 2 * nn128 * (1 - nn138),
  -nn152 + nn144 + nn146 - 2 * nn144 * nn146,
  -nn186 + reduce ((1 - nn134) * (1 - nn140), HT4), 
  -nn158 + nn126 + (1 - nn152) - 2 * nn126 * (1 - nn152),
  -nn166 + nn158 + nn160 - 2 * nn158 * nn160,
  -nn184 + reduce ((1 - nn148) * (1 - nn154), HT4), 
  -nn172 + nn120 + nn166 - 2 * nn120 * nn166,
  -nn176 + nn172 * nn174, 
  -nn180 + nn172 + nn174 - 2 * nn172 * nn174,
  -nn182 + reduce ((1 - nn162) * (1 - nn168), HT4), 
  -s(4) + nn180
;
ideal T(4) = FI, FS3, FS4, CS3, CS4, S(4);
poly Car(4) =   reduce (s(4) + 2 * Car(5) - PP(4), T(4));
 Car(4);

ideal HS3 =
  -nn92 + nn88 * nn90, 
  -nn98 + (1 - nn86) * nn96, 
  -nn106 + nn102 * nn104, 
  -nn112 + nn80 * nn110
;
ideal HT3 = 
  FS2, FS3, CS2, CS3, HS3
;
ideal S(3) =
  -nn88 + a(3) * b(0), 
  -nn90 + a(2) * b(1), 
  -nn104 + a(1) * b(2), 
  -nn118 + a(0) * b(3), 
  -nn96 + nn88 + nn90 - 2 * nn88 * nn90,
  -nn102 + nn86 + (1 - nn96) - 2 * nn86 * (1 - nn96),
  -nn110 + nn102 + nn104 - 2 * nn102 * nn104,
  -nn128 + reduce ((1 - nn92) * (1 - nn98), HT3), 
  -nn116 + nn80 + nn110 - 2 * nn80 * nn110,
  -nn120 + nn116 * nn118, 
  -nn124 + nn116 + nn118 - 2 * nn116 * nn118,
  -nn126 + reduce ((1 - nn106) * (1 - nn112), HT3), 
  -s(3) + nn124
;
ideal T(3) = FI, FS2, FS3, CS2, CS3, S(3);
poly Car(3) =   reduce (s(3) + 2 * Car(4) - PP(3), T(3));
 Car(3);

ideal HS2 =
  -nn66 + nn62 * nn64, 
  -nn72 + nn56 * nn70
;
ideal HT2 = 
  FS1, FS2, CS1, CS2, HS2
;
ideal S(2) =
  -nn62 + a(2) * b(0), 
  -nn64 + a(1) * b(1), 
  -nn78 + a(0) * b(2), 
  -nn70 + nn62 + nn64 - 2 * nn62 * nn64,
  -nn76 + nn56 + nn70 - 2 * nn56 * nn70,
  -nn80 + nn76 * nn78, 
  -nn84 + nn76 + nn78 - 2 * nn76 * nn78,
  -nn86 + reduce ((1 - nn66) * (1 - nn72), HT2), 
  -s(2) + nn84
;
ideal T(2) = FI, FS1, FS2, CS1, CS2, S(2);
poly Car(2) =   reduce (s(2) + 2 * Car(3) - PP(2), T(2));
 Car(2);

ideal HS1 =
  0;
ideal HT1 = 
  FS0, FS1, CS0, CS1, HS1
;
ideal S(1) =
  -nn52 + a(1) * b(0), 
  -nn54 + a(0) * b(1), 
  -nn56 + nn52 * nn54, 
  -nn60 + nn52 + nn54 - 2 * nn52 * nn54,
  -s(1) + nn60
;
ideal T(1) = FI, FS0, FS1, CS0, CS1, S(1);
poly Car(1) =   reduce (s(1) + 2 * Car(2) - PP(1), T(1));
 Car(1);

ideal HS0 =
  -nn50 + a(0) * b(0)
;
ideal HT0 = 
  FS0, CS0, HS0
;
ideal S(0) =
  -s(0) + reduce (nn50, HT0)
 ;
ideal T(0) = FI, FS0, CS0, S(0);
poly Car(0) =   reduce (s(0) + 2 * Car(1) - PP(0), T(0));
 Car(0);

 int t1 = rtimer-t0;
write(":a log.txt", "Time taken for verification is",t1);
write(":a log.txt", "");

 //check if the circuit indeed implements specification
if (Car(0) == 0)
{
  write(":a log.txt", "The circuit is verified against given specification.");
  write(":a log.txt", "Exiting");
  quit;
}
else
{
  write(":a log.txt", "The remainder is ", Car(0));
  write(":a log.txt", "");
  write(":a log.txt", "Circuit doesn't implement specification. Attempting rectification now.");
  write(":a log.txt", "");
}

int i_PP = 0;
list PP;
list temp_PP;
for (i_PP; i_PP <= 2*dp -1; i_PP++)
{
  temp_PP = PP(i_PP);
  PP = PP + temp_PP;
}

int i_SS = 0;
list SS;
list temp_SS;
for (i_SS; i_SS <= 2*dp -1; i_SS++)
{
  temp_SS = s(i_SS);
  SS = SS + temp_SS;
}

int i_TT = 0;
list TT;
list temp_TT;
for (i_TT; i_TT <= 2*dp -1; i_TT++)
{
  temp_TT = sort(T(i_TT));
  temp_TT = temp_TT[1];
  TT = TT + temp_TT;
}

/*
list CC;
CC[2*dp + 1] = 0;
for (int i = 2*dp ; i > 0 ; i--)
{
  CC[i] = reduce((2*CC[i+1] + SS[i] - PP[i]),TT[i]);
  CC[i];
}
*/
//TO DO: remainder analysis and pruning search space

list coneTips =  remainder_partition(Car(0),dp);
list op = decomp(coneTips,dp);
list cones;

int sop = size(op);
cones = -s(op[sop]);
ideal J = S(op[sop]);

if (size(op) == 1)
{ 
  if (op[1] == 0)
  {
    cones = -s(0);
    list rectCheck = prune_logical_cone(cones,(S(0)));
  }  
  else
  {
    list rectCheck = prune_logical_cone(cones,J); }
}
else
{
  
  list rectCheck = prune_logical_cone(cones,J);
}

//list rectCheck = prune_logical_cone(coneTips,J1);

// list rectCheck = -AndSlice1Level1Order0Distance2Lit12;
int t2 = rtimer-t1;
write (":a log.txt", "Time for identifying rectifiable nets",t2);
write(":a log.txt", "");


int rectified = 0;
for(int rect=1; rect<=size(rectCheck);rect++)
{ 
  if (rectified == 0)
  {
    //rectifying at location rf
    poly rf = rectCheck[rect];
    write (":a log.txt", "Checking for rectification at net", rf);

    int ind_r;  
    int i_ind;

    //finding index
    for (int j = 1; j <= size(TT); j++)
    {
      for (i_ind = 1; i_ind <= size(TT[j]) ; i_ind++)
      {
        if (lead(TT[j][i_ind]) == rf)
          {
            ind_r = i_ind;
            int buggy_slice = j;
          }
      }   
    }       

    //replacing with rf+1 and rf+0
    ideal Slice_L = TT[buggy_slice];
    Slice_L[ind_r] = rf+1;
    ideal Slice_H = TT[buggy_slice];
    Slice_H[ind_r] = rf;
    
    list TT_L = TT;
    list TT_H = TT;

    TT_L = delete(TT_L,buggy_slice);
    TT_L = insert(TT_L,Slice_L,buggy_slice-1);

    TT_H = delete(TT_H,buggy_slice);
    TT_H = insert(TT_H,Slice_H,buggy_slice-1);

    //finding rL
    list CC_L;
    CC_L[buggy_slice+1] = Car(buggy_slice);
    for (int i = buggy_slice ; i > 0 ; i--)
    {
      CC_L[i] = reduce((2*CC_L[i+1] + SS[i] - PP[i]),TT_L[i]);
      CC_L[i];
    }

    //finding rH
    list CC_H;
    CC_H[buggy_slice + 1]= Car(buggy_slice);
    for (int i = buggy_slice; i > 0 ; i--)
    {
      CC_H[i] = reduce((2*CC_H[i+1] + SS[i] - PP[i]),TT_H[i]);
      CC_H[i];
    }

    poly rlh = reduce((CC_L[1]*CC_H[1]),FI);

    kill CC_L,CC_H,TT_L,TT_H;

    if (rlh == 0)
    {
      int t3 = rtimer-t2;
      write(":a log.txt","Circuit rectifiable at",rf);
      write(":a log.txt","Time to find the rectification net:" ,t3);

      poly quo;
      poly rem;
      poly prem;

      //needs checking from here 
      //slices equivalent to Jf
      //division of specification by Jf starts here.
      list TT_Jf = TT;
      ideal temp_Jf = TT[buggy_slice];
      //ideal partial = temp_prem[(ind_r - 2)..(ind_r-1)] , temp_prem[(ind_r+2)..(size(temp_prem))];
      ideal partial = temp_Jf[(ind_r+1)..(size(temp_Jf))];
      TT_Jf = delete(TT_Jf,buggy_slice);
      TT_Jf = insert(TT_Jf,partial,buggy_slice-1);
      
      // for(int i = 1; i < buggy_slice; i++)
      // {
      //   TT_Jf[i] = 0;
      // }

      list CC_prem;
      CC_prem[buggy_slice + 1]=Car(buggy_slice);
      for (int i = buggy_slice ; i > 0 ; i--)
      {
        CC_prem[i] = reduce((2*CC_prem[i+1] + SS[i] - PP[i]),TT_Jf[i]);
        CC_prem[i];
      }

      prem = CC_prem[1];
      "prem:",prem;
      //division of specification by Jf stops here.

      //division by xi starts here.    
      rem, quo = multivariate_burg(prem,lead(rf),FI);  
      //division by xi ends here.
      kill TT_Jf;

      //slices equivalent to Js      
      list TT_Js = TT;
      for (int i = 2*dp; i > buggy_slice ; i--)
      {
        TT_Js[i] = 0;
      }
      ideal temp_Js = TT[buggy_slice];
      ideal partial_Js = temp_Js[1..(ind_r-1)];
      TT_Js[buggy_slice] = partial_Js;

      /*
      for (int i = 2*dp ; i > 0 ; i--)
      {
        CC_Js[i] = reduce((2*CC_Js[i+1] + SS[i] - PP[i]),TT_Js[i]);
        CC_Js[i];
      }
      */

      //ideal Js = temp_prem[1..ind_r-1] + S(0) + S(1);

      ideal dec = variables(quo);
      //ideal JCp = quo,Js;

      if (size(dec)>=1)
      {
        /*
        "quotient is not a constant";
        ideal JG = slimgb(JCp);
        matrix V = lift(JG,rem);
        matrix Vt = transpose(V);
        //Vt;
        matrix U = lift(JCp,JG);
        //U;
        poly sol;
        int i;
        for(i=1;i<=size(JG);i++)
        {
          sol = sol + (Vt[1,i]*U[1,i]);
        }
        */
        write(":a log.txt","Quotient is not a constant");
        ideal JCp = quo;
        for (int j = 1; j <= buggy_slice; j++)
        {
          JCp = JCp+TT_Js[j];
        }
        ideal JG = slimgb(JCp);
        matrix V = lift(JG,rem);
        matrix Vt = transpose(V);
        //Vt;
        matrix U = lift(JCp,JG);
        //U;
        poly sol;
        int i;
        for(i=1;i<=size(JG);i++)
        {
          sol = sol + (Vt[1,i]*U[1,i]);
        }
      }
      else
      { 
        "quotient is a constant";
        if (quo != 1)
        {
          matrix quoi = inverse(quo);
        }
        else
        {
          matrix quoi = 1;
        }
        poly irem   = quoi[1,1]*rem;
        //poly sol    = reduce(irem,Js+FI);
        list CC_Js;
        CC_Js[2*dp + 1]=0; 
        for (int i = 2*dp ; i > 0 ; i--)
        {
          CC_Js[i] = reduce(irem,TT_Js[i]);
          irem = CC_Js[i];
        }
        poly sol = CC_Js[1];
        int t4 = rtimer-t3;
        write(":a log.txt","Solution computed",rf);
        write(":a log.txt","Time to find the solution:" ,t4);
      }
      //to here.

      //verifying if the rectification polynomial computed is correct
      write(":a log.txt","Rectification successful. The rectification function is", rf+sol);
      rectified = 1;         
    }  
    else
    {
      write(":a log.txt","Circuit not rectifiable at",rf);
    }  
  }
}
write(":a log.txt", "End of computations.");
write(":a log.txt", "Total time elapsed:",rtimer-t0);