LIB "my_proc_utk.lib";
ring R  = 0,(t,Z,Zs,A,B,z5,z4,z3,z2,z1,z0,fc32,fc31,hc3,fc1,fc11,fc12,fs2,fc2,fc21,fc22,hc1,hs2,hc2,e8,e7,e6,e5,e4,e3,e2,e1,a0,a1,a2,b0,b1,b2),lp;

proc xorgate(poly g, poly h)
{
	return(g+h-2*g*h);
}
proc orgate(poly g, poly h)
{
	return(g+h-g*h);
}

ideal J1 =
Z - (32*z5 + 16*z4 + 8*z3 + 4*z2 + 2*z1 + z0),
A - (4*a2+2*a1+a0),
B - (4*b2+2*b1+b0), 
z0-a0*b0,
e1-a1*b0,
e2-a0*b1,
z1-xorgate(e1,e2),
hc1-e1*e2,
e3-b0*a2,
e4-a1*b1,
hs2-xorgate(e3,e4),
hc2-e3*e4,
e5-a0*b2,
z2-xorgate(xorgate(hs2,hc1),e5),
fc11-(xorgate(hs2,hc1))*e5,
fc12-hs2*hc1,
fc1-orgate(fc11,fc12),
e6-a2*b1,
e7-a1*b2,
fs2-xorgate(xorgate(e6,e7),hc2),
fc21-(xorgate(e6,e7))*hc2,
fc22-e6*e7,
fc2-orgate(fc21,fc22),
z3-xorgate(fs2,fc1),
hc3-fs2*fc1,
e8-a2*b2,
z4-xorgate(xorgate(hc3,e8),fc2),
fc31-(xorgate(hc3,e8))*fc2,
fc32-hc3*e8,
z5-orgate(fc31,fc32);

ideal J0 = 
a0^2-a0,
a1^2-a1,
a2^2-a2,
b0^2-b0,
b1^2-b1,
b2^2-b2;

poly spec = Z - A*B;

poly miter = t*(Z-Zs)-1;

ideal J2 = Zs - A*B;

ideal ckt_imp = J1 + J2 + J0 + spec;

poly rf = ;
"rf:",rf;

int dpSize = 2;

int t1;
int ind_r = get_index(J1+J2, rf);
int ind_Z = get_index(J1+J2, Z);

ideal IL = ckt_imp + miter;
IL[ind_r] = rf-1;
ideal IH = ckt_imp + miter;
IH[ind_r] = rf-0;

poly sp0 = spoly(miter,IL[ind_Z]);
poly rsp0 = reduce(sp0,IL);
ideal EL = normalize(elm_PI(slimgb(rsp0+J0),dpSize*2));

poly sp1 = spoly(miter,IH[ind_Z]);
poly rsp1 = reduce(sp1,IH);
ideal EH = normalize(elm_PI(slimgb(rsp1+J0),dpSize*2));

ideal crp = slimgb(EL+EH);

// ideal EH0 = reduce(EH,J0)+0; //remove all vanishing polys
// ideal EL0 = reduce(EL,J0)+0; //remove all vanishing polys
poly corr = id2poly_itr(EL,J0);

poly corr_off = id2poly_itr(EH,J0);

poly corr_sm = corr;
poly corr_lg = corr_off+1;
// ideal lg_ideal = quotient(J0,EH);
// ideal lg0 = reduce(lg_ideal,J0)+0;
// poly lg = id2poly_fast2(lg0,J0);
// ideal dc_ideal = quotient(lg_ideal,EL);
// ideal dc0 = reduce(dc_ideal,J0)+0;
// poly dc1 = id2poly_fast2(dc0,J0);
poly dc2 = reduce(1+((corr_sm)*(corr_off)), J0);

"time here #####################", rtimer-t0;

ideal CHK = ckt_imp;
CHK[ind_r] = rf+corr;

poly verify = reduce(spec, CHK+J0);
if(verify == 0)
{
	"We found the correct function";
}
else
{
	"Something Wrong";
}

